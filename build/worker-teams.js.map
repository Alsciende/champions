{"version":3,"sources":["scripts/lang/lang-en.js","scripts/lang/lang-es.js","scripts/lang/lang-ru.js","scripts/language.js","scripts/lib/underscore.js","scripts/lib/backbone.js","scripts/model/champion.js","scripts/model/effect.js","scripts/model/synergy.js","scripts/model/type.js","scripts/data/champions.js","scripts/data/effects.js","scripts/data/synergies.js","scripts/data/types.js","scripts/coc-algorithm.js","scripts/worker-teams.js"],"names":["CoC","lang","name","model","champion-blackbolt-name","champion-captainmarvel-name","champion-drax-name","champion-gamora-name","champion-msmarvel-name","champion-ronan-name","champion-spidermanblack-name","champion-superiorironman-name","champion-thor-name","champion-thorjanefoster-name","champion-venom-name","champion-ironman-name","champion-ironpatriot-name","champion-hulkbuster-name","champion-kang-name","champion-rocket-name","champion-starlord-name","champion-vision-name","champion-thevision-name","champion-ultron-name","champion-warmachine-name","champion-colossus-name","champion-cyclops-name","champion-deadpool-name","champion-deadpoolxforce-name","champion-magneto-name","champion-magnetomarvelnow-name","champion-storm-name","champion-wolverine-name","champion-blackpanther-name","champion-blackwidow-name","champion-daredevil-name","champion-daredevilnetflix-name","champion-elektra-name","champion-hawkeye-name","champion-moonknight-name","champion-punisher-name","champion-wintersoldier-name","champion-abomination-name","champion-antman-name","champion-captainamerica-name","champion-captainamericawwii-name","champion-electro-name","champion-hulk-name","champion-joefixit-name","champion-rhino-name","champion-spidergwen-name","champion-spiderman-name","champion-spidermanmorales-name","champion-yellowjacket-name","champion-drstrange-name","champion-ironfist-name","champion-juggernaut-name","champion-magik-name","champion-scarletwitch-name","champion-unstoppablecolossus-name","champion-captainmarvel-shortname","champion-spidermanblack-shortname","champion-superiorironman-shortname","champion-thorjanefoster-shortname","champion-rocket-shortname","champion-deadpoolxforce-shortname","champion-magnetomarvelnow-shortname","champion-captainamerica-shortname","champion-captainamericawwii-shortname","champion-spidermanmorales-shortname","champion-drstrange-shortname","champion-unstoppablecolossus-shortname","effect-attack-name","effect-stun-name","effect-critrate-name","effect-critdamage-name","effect-powergain-name","effect-powersteal-name","effect-perfectblock-name","effect-block-name","effect-armor-name","effect-health-name","effect-healthsteal-name","effect-attack-description","effect-stun-description","effect-critrate-description","effect-critdamage-description","effect-powergain-description","effect-powersteal-description","effect-perfectblock-description","effect-block-description","effect-armor-description","effect-health-description","effect-healthsteal-description","type-cosmic-name","type-tech-name","type-mutant-name","type-skill-name","type-science-name","type-mystic-name","crystal-versus-name","crystal-arena-name","crystal-alliance-name","crystal-daily-name","crystal-2star-name","crystal-premium-name","crystal-3star-name","crystal-4star-name","crystal-versus-description","crystal-arena-description","crystal-alliance-description","crystal-daily-description","crystal-premium-description","crystal-3star-description","crystal-4star-description","algorithm-greedy-name","algorithm-shuffle-name","algorithm-greedy-description","algorithm-shuffle-description","string","of","with","found","extras","team","teams","guide","guides","champion","champions","synergy","synergies","crystal","crystals","roster","manage","add-champion","import-csv","export-csv","delete-all","sort","filter","stars","type","rank","level","awakened","quest","view-guide","delete","cancel","ask-delete","ask-delete-all","cannot-undo","advanced-settings","team-size","algorithm","arena","build","add-all","reset-defaults","champion-weights","synergy-weights","duplicate-weights","choose-preset","use-levels","double","triple","quadruple","quintuple","choose-guide","options","share-to","facebook","twitter","google","tools","language","synergy-map","roster-manager","onboarding-synergies","onboarding-roster","onboarding-teams","coming-soon","description","gameplay","special","signature","heavy-attack","abilities","rating","grade","strategy","style","damage-type","range","note","synergies-external","author","profile","profile-reddit","profile-kabam","author-credit","email","none","champion-blackbolt-shortname","champion-drax-shortname","champion-gamora-shortname","champion-msmarvel-shortname","champion-ronan-shortname","champion-thor-shortname","champion-venom-shortname","champion-ironman-shortname","champion-ironpatriot-shortname","champion-hulkbuster-shortname","champion-kang-shortname","champion-starlord-shortname","champion-vision-shortname","champion-thevision-shortname","champion-ultron-shortname","champion-warmachine-shortname","champion-colossus-shortname","champion-cyclops-shortname","champion-deadpool-shortname","champion-magneto-shortname","champion-storm-shortname","champion-wolverine-shortname","champion-blackpanther-shortname","champion-blackwidow-shortname","champion-daredevil-shortname","champion-daredevilnetflix-shortname","champion-elektra-shortname","champion-hawkeye-shortname","champion-moonknight-shortname","champion-punisher-shortname","champion-wintersoldier-shortname","champion-abomination-shortname","champion-antman-shortname","champion-captaishortnamerica-shortname","champion-captaishortnamericawwii-shortname","champion-electro-shortname","champion-hulk-shortname","champion-joefixit-shortname","champion-rhino-shortname","champion-spidergwen-shortname","champion-spiderman-shortname","champion-yellowjacket-shortname","champion-ironfist-shortname","champion-juggernaut-shortname","champion-magik-shortname","champion-scarletwitch-shortname","quest-group","defaultLang","currentLang","query","location","search","substr","split","map","str","attr","length","unescape","console","warn","key","notFoundValue","value","undefined","current","updateLang","languages","navigator","push","concat","i","_","pairs","escape","join","createReduce","dir","iterator","obj","iteratee","memo","keys","index","currentKey","context","optimizeCb","isArrayLike","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","Math","max","min","slice","call","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","exports","module","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","n","sortBy","criteria","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","partial","boundArgs","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","test","replace","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","e","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd","factory","global","$","Backbone","require","jQuery","Zepto","ender","previousBackbone","emulateHTTP","emulateJSON","addMethod","attribute","defaultVal","unshift","addUnderscoreMethods","Class","_isModel","modelMatcher","get","attributes","Events","eventSplitter","eventsApi","events","callback","opts","on","internalOn","listening","_events","onApi","ctx","listeners","_listeners","listenTo","_listenId","listeningTo","_listeningTo","thisId","objId","count","handlers","off","offApi","stopListening","ids","handler","_callback","onceMap","listenToOnce","offer","trigger","triggerApi","objEvents","allEvents","triggerEvents","ev","a1","a2","a3","unbind","Model","cid","cidPrefix","parse","changed","initialize","validationError","idAttribute","sync","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","isNew","patch","xhr","destroy","url","base","urlError","encodeURIComponent","isValid","error","modelMethods","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","insert","at","singular","removed","_removeModels","toAdd","toRemove","modelMap","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","_removeReference","previousModels","shift","modelId","_byId","callbackOpts","_onModelEvent","event","prevId","collectionMethods","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","delegate","eventName","listener","undelegate","_createElement","document","createElement","_setAttributes","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","exec","param","decodeURIComponent","History","checkUrl","window","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","removeEventListener","detachEvent","removeChild","clearInterval","title","_updateHash","protoProps","staticProps","child","parent","Surrogate","__super__","championStarRankLevels",1,"levels",2,"ranks",3,4,5,"Champion","uid","shortname","typeId","gradeAwakened","_stars","fid","_fid","portrait","_portrait","image","_image","_type","types","_crystals","ccs","crystalChampions","championId","championStars","parseInt","Effect","amount","altimage","imageOff","championIds","_championIds","Synergy","fromId","fromStars","toId","effectId","effectAmount","to","_to","from","_from","effect","_effect","effects","Type","calculateChampionValue","factorial","combination","r","temp","counter","preProcess","typeWeights","useLevels","getDuplicateWeight","getWeight","postProcess","o","getTopPartner","depth","progress","getNextPartner","addPartnerHero","getTypes","next","compareTeams","getTeamValue","addPartnerSynergies","addPartnerType","hero","oldSynergies","vsynergies","vchampions","vtypes","getSynergyCulledTeam","s","cull","culled","t","preselect","team_index","needed","preprocess","heroMap","synergyMap","getHeroStarId","postprocess","getValue","localeCompare","getTeamId","checkValueAndSwap","v1a","v1b","v2a","v2b","count1","count2","tmp","swaps","swap","forceExtras","tid","teamValues","hvalue","svalue","cvalue","addArray","arrays","didExtrasShuffle","maxTeams","progressMax","progressCounter","allFull","empty","best","onmessage","rosterJSON","weights","postMessage","message","number","lastTime","time"],"mappings":"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","file":"worker-teams.js","sourcesContent":["var CoC = CoC || {};\r\nCoC.lang = CoC.lang || {};\r\n\r\nCoC.lang['en'] = {\r\n  name:'English',\r\n  model:{\r\n\r\n    //Champion name\r\n    'champion-blackbolt-name': 'Black Bolt',\r\n    'champion-captainmarvel-name': 'Captain Marvel',\r\n    'champion-drax-name': 'Drax',\r\n    'champion-gamora-name': 'Gamora',\r\n    'champion-msmarvel-name': 'Ms. Marvel',\r\n    'champion-ronan-name': 'Ronan',\r\n    'champion-spidermanblack-name': 'Spider-Man Symbiote',\r\n    'champion-superiorironman-name': 'Superior Iron Man',\r\n    'champion-thor-name': 'Thor',\r\n    'champion-thorjanefoster-name': 'Thor Jane Foster',\r\n    'champion-venom-name': 'Venom',\r\n    'champion-ironman-name': 'Iron Man',\r\n    'champion-ironpatriot-name': 'Iron Patriot',\r\n    'champion-hulkbuster-name': 'Hulkbuster',\r\n    'champion-kang-name': 'Kang',\r\n    'champion-rocket-name': 'Rocket Raccoon',\r\n    'champion-starlord-name': 'Star-Lord',\r\n    'champion-vision-name': 'Vision',\r\n    'champion-thevision-name': 'The Vision',\r\n    'champion-ultron-name': 'Ultron',\r\n    'champion-warmachine-name': 'War Machine',\r\n    'champion-colossus-name': 'Colossus',\r\n    'champion-cyclops-name': 'Cyclops',\r\n    'champion-deadpool-name': 'Deadpool',\r\n    'champion-deadpoolxforce-name': 'Deadpool X-Force',\r\n    'champion-magneto-name': 'Magneto',\r\n    'champion-magnetomarvelnow-name': 'Magneto Marvel Now',\r\n    'champion-storm-name': 'Storm',\r\n    'champion-wolverine-name': 'Wolverine',\r\n    'champion-blackpanther-name': 'Black Panther',\r\n    'champion-blackwidow-name': 'Black Widow',\r\n    'champion-daredevil-name': 'Daredevil',\r\n    'champion-daredevilnetflix-name': 'Daredevil',\r\n    'champion-elektra-name': 'Elektra',\r\n    'champion-hawkeye-name': 'Hawkeye',\r\n    'champion-moonknight-name': 'Moon Knight',\r\n    'champion-punisher-name': 'Punisher',\r\n    'champion-wintersoldier-name': 'Winter Soldier',\r\n    'champion-abomination-name': 'Abomination',\r\n    'champion-antman-name': 'Ant-Man',\r\n    'champion-captainamerica-name': 'Captain America',\r\n    'champion-captainamericawwii-name': 'Captain America WWII',\r\n    'champion-electro-name': 'Electro',\r\n    'champion-hulk-name': 'Hulk',\r\n    'champion-joefixit-name': 'Joe Fixit',\r\n    'champion-rhino-name': 'Rhino',\r\n    'champion-spidergwen-name': 'Spider-Gwen',\r\n    'champion-spiderman-name': 'Spider-Man',\r\n    'champion-spidermanmorales-name': 'Spider-Man Morales',\r\n    'champion-yellowjacket-name': 'YellowJacket',\r\n    'champion-drstrange-name': 'Doctor Strange',\r\n    'champion-ironfist-name': 'Iron Fist',\r\n    'champion-juggernaut-name': 'Juggernaut',\r\n    'champion-magik-name': 'Magik',\r\n    'champion-scarletwitch-name': 'Scarlet Witch',\r\n    'champion-unstoppablecolossus-name': 'Unstoppable Colossus',\r\n\r\n    //Champion shortname\r\n    'champion-captainmarvel-shortname': 'Cap. Marvel',\r\n    'champion-spidermanblack-shortname': 'Spider-Man',\r\n    'champion-superiorironman-shortname': 'Sup. Iron Man',\r\n    'champion-thorjanefoster-shortname': 'Thor',\r\n    'champion-rocket-shortname': 'Rocket',\r\n    'champion-deadpoolxforce-shortname': 'Deadpool',\r\n    'champion-magnetomarvelnow-shortname': 'Magneto',\r\n    'champion-captainamerica-shortname': 'Cap. America',\r\n    'champion-captainamericawwii-shortname': 'Cap. America',\r\n    'champion-spidermanmorales-shortname': 'Spider-Man',\r\n    'champion-drstrange-shortname': 'Dr. Strange',\r\n    'champion-unstoppablecolossus-shortname': 'Unst. Colossus',\r\n\r\n    //Effect name\r\n    'effect-attack-name': 'Attack',\r\n    'effect-stun-name': 'Stun',\r\n    'effect-critrate-name': 'Critical Rate',\r\n    'effect-critdamage-name': 'Critical Damage',\r\n    'effect-powergain-name': 'Power Gain',\r\n    'effect-powersteal-name': 'Power Steal',\r\n    'effect-perfectblock-name': 'Perfect Block',\r\n    'effect-block-name': 'Block Proficiency',\r\n    'effect-armor-name': 'Armor',\r\n    'effect-health-name': 'Health',\r\n    'effect-healthsteal-name': 'Health Steal',\r\n\r\n    //Effect description\r\n    'effect-attack-description': 'Increases damage on all attacks.',\r\n    'effect-stun-description': 'Chance to Stun on special attacks.',\r\n    'effect-critrate-description': 'Increases the chance for Critical hit.',\r\n    'effect-critdamage-description': 'Increases damage multiplier for Critical hits.',\r\n    'effect-powergain-description': 'Gain additional Power (used to trigger a special) whenever Power is gained.',\r\n    'effect-powersteal-description': 'Gain Power (used to trigger a special) when attacking.',\r\n    'effect-perfectblock-description': 'Increased chance to Perfect Block for 0 damage.',\r\n    'effect-block-description': 'Increases Block effectiveness for less damage taken.',\r\n    'effect-armor-description': 'Increases Armor so that all damage taken is decreased.',\r\n    'effect-health-description': 'Increases champion Health.',\r\n    'effect-healthsteal-description': 'Gain Health when attacking.',\r\n\r\n    //Type name\r\n    'type-cosmic-name': 'Cosmic',\r\n    'type-tech-name': 'Tech',\r\n    'type-mutant-name': 'Mutant',\r\n    'type-skill-name': 'Skill',\r\n    'type-science-name': 'Science',\r\n    'type-mystic-name': 'Mystic',\r\n\r\n    //Crystal name\r\n    'crystal-versus-name': 'Versus',\r\n    'crystal-arena-name': 'Arena',\r\n    'crystal-alliance-name': 'Alliance',\r\n    'crystal-daily-name': 'Daily',\r\n    'crystal-2star-name': '2-Star',\r\n    'crystal-premium-name': 'Premium',\r\n    'crystal-3star-name': '3-Star',\r\n    'crystal-4star-name': '4-Star',\r\n\r\n    //Crystal description (keep $CURRENCY$ tokens for image replacement)\r\n    'crystal-versus-description': 'Acquired when you win a versus match.',\r\n    'crystal-arena-description': 'Buy for 2000 $BATTLECHIPS$.',\r\n    'crystal-alliance-description': 'Buy for 1000 $LOYALTY$.',\r\n    'crystal-daily-description': 'Acquired once every 24 hours.',\r\n    'crystal-premium-description': 'Buy for 100 $UNITS$.',\r\n    'crystal-3star-description': 'Buy for 400 $UNITS$, rare event.',\r\n    'crystal-4star-description': 'Buy for 2500 $UNITS$, very rare event.',\r\n\r\n    //Algorithm name\r\n    'algorithm-greedy-name': 'Greedy',\r\n    'algorithm-shuffle-name': 'Shuffle',\r\n\r\n    //Algorithm description\r\n    'algorithm-greedy-description': 'SLOW. This picks the best team mathematically given all parameters.',\r\n    'algorithm-shuffle-description': 'FAST. This chooses the best combinations of teams possible.',\r\n\r\n  },\r\n  string: {\r\n    //Listing words\r\n    'of': 'of',\r\n    'with': 'with',\r\n    'found': 'Found',\r\n    'extras': 'Extras',\r\n\r\n    //Common words/sections\r\n    'team': 'Team',\r\n    'teams': 'Teams',\r\n\r\n    'guide': 'Guide',\r\n    'guides': 'Guides',\r\n\r\n    'champion': 'Champion',\r\n    'champions': 'Champions',\r\n\r\n    'synergy': 'Synergy',\r\n    'synergies': 'Synergies',\r\n\r\n    'crystal': 'Crystal',\r\n    'crystals': 'Crystals',\r\n\r\n    'roster': 'Roster',\r\n\r\n    //Roster Panel\r\n    'manage': 'Manage',\r\n    'add-champion': 'Add a Champion',\r\n    'import-csv': 'Import .csv',\r\n    'export-csv': 'Export .csv',\r\n    'delete-all': 'Delete All',\r\n\r\n    'sort': 'Sort',\r\n    'filter': 'Filter',\r\n\r\n    //Roster Config\r\n    'stars': 'Stars',\r\n    'type': 'Type',\r\n    'name': 'Name',\r\n\r\n    'rank': 'Rank',\r\n    'level': 'Level',\r\n    'awakened': 'Awakened',\r\n    'quest': 'Quest',\r\n    'view-guide': 'View Guide',\r\n\r\n    'delete': 'Delete',\r\n    'cancel': 'Cancel',\r\n\r\n    'ask-delete': 'Are you sure you want to delete',\r\n    'ask-delete-all': 'Are you sure you want to delete all of your champions?',\r\n    'cannot-undo': 'This action cannot be undone.',\r\n\r\n    //Team Panel\r\n    'advanced-settings': 'Advanced Settings',\r\n    'team-size': 'Team Size',\r\n    'algorithm': 'Algorithm',\r\n    'arena': 'Arena',\r\n    'build': 'Build',\r\n\r\n    //Add Champion Page\r\n    'add-all': 'Add All',\r\n\r\n    //Advanced Settings Page\r\n    'reset-defaults': 'Reset to Defaults',\r\n    'champion-weights': 'Champion Weights',\r\n    'synergy-weights': 'Synergy Weights',\r\n    'duplicate-weights': 'Duplicate Class Weights',\r\n    'choose-preset': 'Choose a preset...',\r\n    'use-levels': 'Calculate using stars / ranks / levels',\r\n\r\n    //Tuples\r\n    'double': 'Double',\r\n    'triple': 'Triple',\r\n    'quadruple': 'Quadruple',\r\n    'quintuple': 'Quintuple',\r\n\r\n    //Guide Page\r\n    'choose-guide': 'Choose a guide',\r\n\r\n    //Options\r\n    'options': 'Options',\r\n    'share-to': 'Share to',\r\n    'facebook': 'Facebook',\r\n    'twitter': 'Twitter',\r\n    'google': 'Google',\r\n    'tools': 'Tools',\r\n    'language': 'Language',\r\n    'synergy-map': 'Synergy Map',    \r\n    'roster-manager': 'Roster Manager',  \r\n\r\n    //Onboarding Messages\r\n    'onboarding-synergies': 'Use the roster manager tool to add more champions to your roster.',\r\n    'onboarding-roster': 'Use the options menu to add new champions',\r\n    'onboarding-teams': 'Use the Build menu create your teams!',\r\n\r\n    //Guide\r\n    'coming-soon': 'Coming Soon...',\r\n    'description': 'Description',\r\n    'gameplay': 'Gameplay',\r\n    'special': 'Special',\r\n    'signature': 'Signature Ability',\r\n    'heavy-attack': 'Heavy Attack',\r\n    'abilities': 'Abilities',\r\n\r\n    'rating': 'Rating',\r\n    'grade': 'Grade',\r\n    'strategy': 'Strategy',\r\n    'style': 'Style',\r\n\r\n    'damage-type': 'Damage Type',\r\n    'range': 'Range',\r\n    'note': 'Note',\r\n\r\n    'synergies-external': 'External Synergies',\r\n\r\n    'author': 'Author',\r\n    'profile': 'Profile',\r\n    'profile-reddit': 'Reddit /u/',\r\n    'profile-kabam': 'Kabam Forums',\r\n    'author-credit': 'This guide was brought to you by',\r\n\r\n    'email': 'E-mail',\r\n    \r\n    'none': 'None',\r\n  }\r\n};\r\n","var CoC = CoC || {};\r\nCoC.lang = CoC.lang || {};\r\n\r\nCoC.lang['es'] = {\r\n  name:'Español',\r\n  model:{\r\n\r\n    //Champion name\r\n    'champion-blackbolt-name': 'Rayo Negro',\r\n    'champion-captainmarvel-name': 'Capitana Marvel',\r\n    'champion-drax-name': 'Drax',\r\n    'champion-gamora-name': 'Gamora',\r\n    'champion-msmarvel-name': 'Ms. Marvel',\r\n    'champion-ronan-name': 'Ronan',\r\n    'champion-spidermanblack-name': 'Spider-Man Simbionte',\r\n    'champion-superiorironman-name': 'Iron Man Superior',\r\n    'champion-thor-name': 'Thor',\r\n    'champion-thorjanefoster-name': 'Thor Jane Foster',\r\n    'champion-venom-name': 'Venom',\r\n    'champion-ironman-name': 'Iron Man',\r\n    'champion-ironpatriot-name': 'Iron Patriot',\r\n    'champion-hulkbuster-name': 'Hulkbuster',\r\n    'champion-kang-name': 'Kang',\r\n    'champion-rocket-name': 'Rocket el Mapache',\r\n    'champion-starlord-name': 'Star-Lord',\r\n    'champion-vision-name': 'Visión',\r\n    'champion-thevision-name': 'La Vision',\r\n    'champion-ultron-name': 'Ultron',\r\n    'champion-warmachine-name': 'Máquina de Guerra',\r\n    'champion-colossus-name': 'Coloso',\r\n    'champion-cyclops-name': 'Cyclops',\r\n    'champion-deadpool-name': 'Deadpool',\r\n    'champion-deadpoolxforce-name': 'Deadpool X-Force',\r\n    'champion-magneto-name': 'Magneto',\r\n    'champion-magnetomarvelnow-name': 'Magneto Marvel Now',\r\n    'champion-storm-name': 'Tormenta',\r\n    'champion-wolverine-name': 'Lobezno',\r\n    'champion-blackpanther-name': 'Pantera Negra',\r\n    'champion-blackwidow-name': 'Black Widow',\r\n    'champion-daredevil-name': 'Daredevil',\r\n    'champion-daredevilnetflix-name': 'Daredevil',\r\n    'champion-elektra-name': 'Elektra',\r\n    'champion-hawkeye-name': 'Ojo de Halcon',\r\n    'champion-moonknight-name': 'Caballero Luna',\r\n    'champion-punisher-name': 'Punisher',\r\n    'champion-wintersoldier-name': 'Winter Soldier',\r\n    'champion-abomination-name': 'Abomination',\r\n    'champion-antman-name': 'Ant-Man',\r\n    'champion-captainamerica-name': 'Capitàn América',\r\n    'champion-captainamericawwii-name': 'Capitán América 2º GM',\r\n    'champion-electro-name': 'Electro',\r\n    'champion-hulk-name': 'Hulk',\r\n    'champion-joefixit-name': 'Joe Fixit',\r\n    'champion-rhino-name': 'Rhino',\r\n    'champion-spidergwen-name': 'Spider-Gwen',\r\n    'champion-spiderman-name': 'Spider-Man',\r\n    'champion-spidermanmorales-name': 'Spider-Man Morales',\r\n    'champion-yellowjacket-name': 'YellowJacket',\r\n    'champion-drstrange-name': 'Dr. Extraño',\r\n    'champion-ironfist-name': 'Puño de Hierro',\r\n    'champion-juggernaut-name': 'Juggernaut',\r\n    'champion-magik-name': 'Magik',\r\n    'champion-scarletwitch-name': 'Bruja Escarlata',\r\n    'champion-unstoppablecolossus-name': 'Coloso Imparable',\r\n\r\n    //Champion shortname\r\n    'champion-captainmarvel-shortname': 'Cap. Marvel',\r\n    'champion-spidermanblack-shortname': 'Spider-Man',\r\n    'champion-superiorironman-shortname': 'Iron Man Sup.',\r\n    'champion-thorjanefoster-shortname': 'Thor',\r\n    'champion-rocket-shortname': 'Rocket',\r\n    'champion-deadpoolxforce-shortname': 'Deadpool',\r\n    'champion-magnetomarvelnow-shortname': 'Magneto',\r\n    'champion-captainamerica-shortname': 'Cap. America',\r\n    'champion-captainamericawwii-shortname': 'Cap. America',\r\n    'champion-spidermanmorales-shortname': 'Spider-Man',\r\n    'champion-drstrange-shortname': 'Dr. Strange',\r\n    'champion-unstoppablecolossus-shortname': 'Coloso Imp.',\r\n\r\n    //Effect name\r\n    'effect-attack-name': 'Furia',\r\n    'effect-stun-name': 'Aturdir',\r\n    'effect-critrate-name': 'Prob. de Golpe Crítico',\r\n    'effect-critdamage-name': 'Daño de Golpe Crítico',\r\n    'effect-powergain-name': 'Acopio de Poder',\r\n    'effect-powersteal-name': 'Robapoderes',\r\n    'effect-perfectblock-name': 'Bloqueo Impecable',\r\n    'effect-block-name': 'Bloqueo Maestro',\r\n    'effect-armor-name': 'Robustez',\r\n    'effect-health-name': 'Curación',\r\n    'effect-healthsteal-name': 'Parásito',\r\n\r\n    //Effect description\r\n    'effect-attack-description': 'Incrementa el daño de todos los ataques.',\r\n    'effect-stun-description': 'Probabilidad de aturdir con ataques especiales.',\r\n    'effect-critrate-description': 'Incrementa la probabilidad para golpes críticos.',\r\n    'effect-critdamage-description': 'Incrementa el daño para golpes críticos.',\r\n    'effect-powergain-description': 'Gana poder adicional (usado para activar un especial) cada vez que se gana poder.',\r\n    'effect-powersteal-description': 'Gana poder adicional (usado para activar un especial) cuando atacas.',\r\n    'effect-perfectblock-description': 'Probabilidad adicional de hacer un bloqueo perfecto con 0 daño.',\r\n    'effect-block-description': 'Incrementa la efectividad del bloqueo para reducir el daño recibido.',\r\n    'effect-armor-description': 'Incrementa la armadura para reducir todo el daño recibido.',\r\n    'effect-health-description': 'Incrementa la salúd del luchador.',\r\n    'effect-healthsteal-description': 'Incrementa la salúd al atacar.',\r\n\r\n    //Type name\r\n    'type-cosmic-name': 'Cósmico',\r\n    'type-tech-name': 'Tech',\r\n    'type-mutant-name': 'Mutante',\r\n    'type-skill-name': 'Habilidad',\r\n    'type-science-name': 'Científico',\r\n    'type-mystic-name': 'Místico',\r\n\r\n    //Crystal name\r\n    'crystal-versus-name': 'Versus',\r\n    'crystal-arena-name': 'Arena',\r\n    'crystal-alliance-name': 'Alianza',\r\n    'crystal-daily-name': 'Diario',\r\n    'crystal-2star-name': '2 Estrellas',\r\n    'crystal-premium-name': 'Premium',\r\n    'crystal-3star-name': '3 Estrellas',\r\n    'crystal-4star-name': '4 Estrellas',\r\n\r\n    //Crystal description (keep $CURRENCY$ tokens for image replacement)\r\n    'crystal-versus-description': 'Obtenido al ganar una pelea versus.',\r\n    'crystal-arena-description': 'Cómpralo por 2000 $BATTLECHIPS$.',\r\n    'crystal-alliance-description': 'Cómpralo por 1000 $LOYALTY$.',\r\n    'crystal-daily-description': 'Adquirido una vez cada 24 horas.',\r\n    'crystal-premium-description': 'Cómpralo por 100 $UNITS$.',\r\n    'crystal-3star-description': 'Cómpralo por 400 $UNITS$, poco común.',\r\n    'crystal-4star-description': 'Cómpralo por 2500 $UNITS$, muy poco común.',\r\n\r\n    //Algorithm name\r\n    'algorithm-greedy-name': 'Egoísta',\r\n    'algorithm-shuffle-name': 'Mixto',\r\n\r\n    //Algorithm description\r\n    'algorithm-greedy-description': 'LENTO. Elige el mejor equipo matemáticamente tomando en cuenta todos los parámetros.',\r\n    'algorithm-shuffle-description': 'RÁPIDO. Elige las mejores combinaciones posibles de equipos.',\r\n\r\n  },\r\n  string: {\r\n    //Listing words\r\n    'of': 'de',\r\n    'with': 'con',\r\n    'found': 'Encontrado',\r\n    'extras': 'Extras',\r\n\r\n    //Common words/sections\r\n    'team': 'Equipo',\r\n    'teams': 'Equipos',\r\n\r\n    'guide': 'Guía',\r\n    'guides': 'Guías',\r\n\r\n    'champion': 'Luchador',\r\n    'champions': 'Luchadores',\r\n\r\n    'synergy': 'Sinergia',\r\n    'synergies': 'Sinergias',\r\n\r\n    'crystal': 'Cristal',\r\n    'crystals': 'Cristales',\r\n\r\n    'roster': 'Repertorio',\r\n\r\n    //Roster Panel\r\n    'manage': 'Administra',\r\n    'add-champion': 'Añade un Luchador',\r\n    'import-csv': 'Import .csv',\r\n    'export-csv': 'Export .csv',\r\n    'delete-all': 'Borra todo',\r\n\r\n    'sort': 'Clasificar',\r\n    'filter': 'Filtrar',\r\n\r\n    //Roster Config\r\n    'stars': 'Estrellas',\r\n    'type': 'Tipo',\r\n    'name': 'Name',\r\n\r\n    'rank': 'Rango',\r\n    'level': 'Nivel',\r\n    'awakened': 'Despertado',\r\n    'quest': 'Gesta',\r\n    'view-guide': 'Ver Guía',\r\n\r\n    'delete': 'Borrar',\r\n    'cancel': 'Cancelar',\r\n\r\n    'ask-delete': '¿Estas seguro que quieres borrar?',\r\n    'ask-delete-all': '¿Estás seguro que quieres borrar a todos tus luchadores?',\r\n    'cannot-undo': 'Esta acción no puede ser deshecha.',\r\n\r\n    //Team Panel\r\n    'advanced-settings': 'Configuración Avanzada',\r\n    'team-size': 'Tamaño del Equipo',\r\n    'algorithm': 'Algoritmo',\r\n    'arena': 'Arena',\r\n    'build': 'Armar',\r\n\r\n    //Add Champion Page\r\n    'add-all': 'Añadir Todo',\r\n\r\n    //Advanced Settings Page\r\n    'reset-defaults': 'Reiniciar a default',\r\n    'champion-weights': 'Importancia de Luchadores',\r\n    'synergy-weights': 'Importancia de Sinergías',\r\n    'duplicate-weights': 'Importancia de Duplicación',\r\n    'choose-preset': 'Elige un parámetro...',\r\n    'use-levels': 'Calcula usando Estrellas / Rangos / Niveles',\r\n\r\n    //Tuples\r\n    'double': 'Doble',\r\n    'triple': 'Triple',\r\n    'quadruple': 'Cuadruple',\r\n    'quintuple': 'Quintuple',\r\n\r\n    //Guide Page\r\n    'choose-guide': 'Elige una guía',\r\n\r\n    //Options\r\n    'options': 'Opciones',\r\n    'share-to': 'Compartir',\r\n    'facebook': 'Facebook',\r\n    'twitter': 'Twitter',\r\n    'google': 'Google',\r\n    'tools': 'Herramientas',\r\n    'language': 'Idioma',\r\n    'synergy-map': 'Mapa de Sinergias',    \r\n    'roster-manager': 'Administrador de Repertorio',  \r\n\r\n    //Onboarding Messages\r\n    'onboarding-synergies': 'Usa la herramienta Administrador de Repertorio para añadir más luchadores a tu repertorio.',\r\n    'onboarding-roster': 'Usa el menú de opciones para añadir nuevos luchadores',\r\n    'onboarding-teams': '¡Usa el menú Armar para crear tus equipos!',\r\n\r\n    //Guide\r\n    'coming-soon': 'Pronto...',\r\n    'gameplay': 'Gameplay',\r\n    'special': 'Especial',\r\n    'signature': 'Habilidad Especial',\r\n    'heavy-attack': 'Ataque Pesado',\r\n    'abilities': 'Abilidades',\r\n\r\n    'grade': 'Calificación',\r\n    'strategy': 'Estrategia',\r\n\r\n    'damage-type': 'Tipo de daño',\r\n    'range': 'Rango',\r\n    'note': 'Nota',\r\n\r\n    'synergies-external': 'Sinergias Externas',\r\n\r\n    'none': 'Ninguno',\r\n  }\r\n};\r\n// http://collabedit.com/pwxck\r\n","var CoC = CoC || {};\nCoC.lang = CoC.lang || {};\n\nCoC.lang['ru'] = {\n  name:'Русский',\n  model: { \n  \n    //Champion name \n    'champion-blackbolt-name': 'Черный Гром',\n    'champion-captainmarvel-name': 'Капитан Марвел',\n    'champion-drax-name': 'Дракс',\n    'champion-gamora-name': 'Гамора',\n    'champion-msmarvel-name': 'Мисс Марвел',\n    'champion-ronan-name': 'Ронан',\n    'champion-spidermanblack-name': 'Черный Человек-Паук',\n    'champion-superiorironman-name': 'Высший Железный Человек',\n    'champion-thor-name': 'Тор',\n    'champion-thorjanefoster-name': 'Джейн Фостер',\n    'champion-venom-name': 'Веном',\n    'champion-ironman-name': 'Железный Человек',\n    'champion-ironpatriot-name': 'Железный Патриот',\n    'champion-hulkbuster-name': 'Халкбастер',\n    'champion-kang-name': 'Канг',\n    'champion-rocket-name': 'Реактивный Енот',\n    'champion-starlord-name': 'Звездный Лорд',\n    'champion-vision-name': 'Вижн',\n    'champion-thevision-name': 'Вижн Кино',\n    'champion-ultron-name': 'Альтрон Прайм',\n    'champion-warmachine-name': 'Воитель',\n    'champion-colossus-name': 'Колосс',\n    'champion-cyclops-name': 'Циклоп',\n    'champion-deadpool-name': 'Дедпул',\n    'champion-deadpoolxforce-name': 'Дедпул X-Force',\n    'champion-magneto-name': 'Магнето',\n    'champion-magnetomarvelnow-name': 'Белый Магнето',\n    'champion-storm-name': 'Шторм',\n    'champion-wolverine-name': 'Росомаха',\n    'champion-blackpanther-name': 'Черная Пантера',\n    'champion-blackwidow-name': 'Черная Вдова',\n    'champion-daredevil-name': 'Сорвиголова',\n    'champion-daredevilnetflix-name': 'Сорвиголова Netflix',\n    'champion-elektra-name': 'Электра',\n    'champion-hawkeye-name': 'Соколиный Глаз',\n    'champion-moonknight-name': 'Лунный Рыцарь',\n    'champion-punisher-name': 'Каратель',\n    'champion-wintersoldier-name': 'Зимний Солдат',\n    'champion-abomination-name': 'Мерзость',\n    'champion-antman-name': 'Человек Муравей',\n    'champion-captainamerica-name': 'Капитан Америка',\n    'champion-captainamericawwii-name': 'Капитан Америка WWII',\n    'champion-electro-name': 'Электро',\n    'champion-hulk-name': 'Халк',\n    'champion-joefixit-name': 'Джо Фиксит',\n    'champion-rhino-name': 'Носорог',\n    'champion-spidergwen-name': 'Спайдер Гвен',\n    'champion-spiderman-name': 'Человек-Паук',\n    'champion-spidermanmorales-name': 'Человек-Паук Моралес',\n    'champion-yellowjacket-name': 'Желтый Шершень',\n    'champion-drstrange-name': 'Доктор Стрэндж',\n    'champion-ironfist-name': 'Железный Кулак',\n    'champion-juggernaut-name': 'Джаггернаут',\n    'champion-magik-name': 'Мэджик',\n    'champion-scarletwitch-name': 'Алая Ведьма',\n    'champion-unstoppablecolossus-name': 'Неудержимый Колосс',\n    \n    //Champion shortnames\n    'champion-blackbolt-shortname': 'Гром',\n    'champion-captainmarvel-shortname': 'Кэп Марвел',\n    'champion-drax-shortname': 'Дракс',\n    'champion-gamora-shortname': 'Гамора',\n    'champion-msmarvel-shortname': 'Мисс',\n    'champion-ronan-shortname': 'Ронан',\n    'champion-spidermanblack-shortname': 'Черный Паук',\n    'champion-superiorironman-shortname': 'СЖЧ',\n    'champion-thor-shortname': 'Тор',\n    'champion-thorjanefoster-shortname': 'Джейн Фостер',\n    'champion-venom-shortname': 'Веном',\n    'champion-ironman-shortname': 'ЖЧ',\n    'champion-ironpatriot-shortname': 'ЖП',\n    'champion-hulkbuster-shortname': 'ХБ',\n    'champion-kang-shortname': 'Канг',\n    'champion-rocket-shortname': 'Енот',\n    'champion-starlord-shortname': 'Лорд',\n    'champion-vision-shortname': 'Вижн',\n    'champion-thevision-shortname': 'Вижн Кино',\n    'champion-ultron-shortname': 'Альтрон',\n    'champion-warmachine-shortname': 'Воитель',\n    'champion-colossus-shortname': 'Колосс',\n    'champion-cyclops-shortname': 'Циклоп',\n    'champion-deadpool-shortname': 'Дед',\n    'champion-deadpoolxforce-shortname': 'Дед седой',\n    'champion-magneto-shortname': 'Магнит',\n    'champion-magnetomarvelnow-shortname': 'Белый Магнит',\n    'champion-storm-shortname': 'Шторм',\n    'champion-wolverine-shortname': 'Рося',\n    'champion-blackpanther-shortname': 'Пантера',\n    'champion-blackwidow-shortname': 'Вдова',\n    'champion-daredevil-shortname': 'Сорвиголова',\n    'champion-daredevilnetflix-shortname': 'Сорвиголова Netflix',\n    'champion-elektra-shortname': 'Электра',\n    'champion-hawkeye-shortname': 'Сокол',\n    'champion-moonknight-shortname': 'Лунатик',\n    'champion-punisher-shortname': 'Кара',\n    'champion-wintersoldier-shortname': 'Зимний',\n    'champion-abomination-shortname': 'Мерзость',\n    'champion-antman-shortname': 'Муравей',\n    'champion-captaishortnamerica-shortname': 'Кэп',\n    'champion-captaishortnamericawwii-shortname': 'Кэп ВМВ',\n    'champion-electro-shortname': 'Электрик',\n    'champion-hulk-shortname': 'Халк',\n    'champion-joefixit-shortname': 'Фиксит',\n    'champion-rhino-shortname': 'Носорог',\n    'champion-spidergwen-shortname': 'Гвен',\n    'champion-spiderman-shortname': 'Паук',\n    'champion-spidermanmorales-shortname': 'Моралес',\n    'champion-yellowjacket-shortname': 'Шершень',\n    'champion-drstrange-shortname': 'Док',\n    'champion-ironfist-shortname': 'Кулак',\n    'champion-juggernaut-shortname': 'Джаг',\n    'champion-magik-shortname': 'Мэджик',\n    'champion-scarletwitch-shortname': 'Ведьма',\n    'champion-unstoppablecolossus-shortname': 'Неуд',\n    \n    //Effect name \n    'effect-attack-name': 'Атака',\n    'effect-stun-name': 'Оглушение',\n    'effect-critrate-name': 'Вероятность крит. урона',\n    'effect-critdamage-name': 'Крит. Урон',\n    'effect-powergain-name': 'Увеличение Энергии',\n    'effect-powersteal-name': 'Кража Энергии',\n    'effect-perfectblock-name': 'Идеальный Блок',\n    'effect-block-name': 'Вероятность ид. блока',\n    'effect-armor-name': 'Броня',\n    'effect-health-name': 'Здоровье',\n    'effect-healthsteal-name': 'Кража здоровья',\n    \n    //Effect description \n    'effect-attack-description': 'Увеличение урона на все атаки.',\n    'effect-stun-description': 'Шанс оглушения при спец. атаках.',\n    'effect-critrate-description': 'Увеличение вероятности крит. урона.',\n    'effect-critdamage-description': 'Увеличение критического урона.',\n    'effect-powergain-description': 'Увеличечние энергии (от спец. атак) независимо от атаки.',\n    'effect-powersteal-description': 'Кража энергии (от спец. атак) за счет атаки.',\n    'effect-perfectblock-description': 'Увеличение шанса идеального блока - 0 урона в блоке.',\n    'effect-block-description': 'Увеличение эффективности блокирования - уменьшение урона в блоке.',\n    'effect-armor-description': 'Увеличение брони, тем самым уменьшая получаемый урон.',\n    'effect-health-description': 'Увеличение здоровья чемпиона.',\n    'effect-healthsteal-description': 'Восполнение здоровья при атаке.',\n    \n    //Type name \n    'type-cosmic-name': 'Космос',\n    'type-tech-name': 'Технологии',\n    'type-mutant-name': 'Мутации',\n    'type-skill-name': 'Способности',\n    'type-science-name': 'Наука',\n    'type-mystic-name': 'Мистика',\n    \n    //Crystal name \n    'crystal-versus-name': 'Кристалл за битвы',\n    'crystal-arena-name': 'Кристалл Арены',\n    'crystal-alliance-name': 'Кристалл союза',\n    'crystal-daily-name': 'Ежедневный кристалл',\n    'crystal-2star-name': 'Кристалл героя с 2-мя звездами',\n    'crystal-premium-name': 'Усиленный кристалл героя',\n    'crystal-3star-name': 'Кристалл героя с 3-мя звездами',\n    'crystal-4star-name': 'Кристалл героя с 4-мя звездами',\n    \n    //Crystal description (keep $CURRENCY$ tokens for image replacement) \n    'crystal-versus-description': 'Даётся за победу на арене 1vs1.',\n    'crystal-arena-description': 'Покупается за 2000 $BATTLECHIPS$.',\n    'crystal-alliance-description': 'Покупается за 1000 $LOYALTY$.',\n    'crystal-daily-description': 'Появляется каждые 24 часа.',\n    'crystal-premium-description': 'Покупается за 100 $UNITS$.',\n    'crystal-3star-description': 'Покупается за 400 $UNITS$, редкая акция.',\n    'crystal-4star-description': 'Покупается за 2500 $UNITS$, очень редкая акция.',\n\n    //Algorithm name\n    'algorithm-greedy-name': 'Greedy',\n    'algorithm-shuffle-name': 'Смешанный',\n\n    //Algorithm description\n    'algorithm-greedy-description': 'МЕДЛЕННЫЙ. Выбирает команды, используя математический просчет на основе введенных апраметров.',\n    'algorithm-shuffle-description': 'БЫСТРЫЙ. Выбирает лучшую возможную комбинацию команды.',\n  },\n  string: { \n  \n      //Listing words \n    'of': 'из',\n    'with': 'с',\n    'found': 'Найден',\n    'extras': 'Экстра',\n    \n    //Common words/sections \n    'team': 'Команда',\n    'teams': 'Команды',\n    'guide': 'Руководство',\n    'guides': 'Руководства',\n    'champion': 'Чемпион',\n    'champions': 'Чемпионы',\n    'synergy': 'Синергия',\n    'synergies': 'Синергии',\n    'crystal': 'Кристалл',\n    'crystals': 'Кристаллы',\n    'roster': 'Список',\n    \n    //Roster Panel \n    'manage': 'Управление',\n    'add-champion': 'Добавить чемпиона',\n    'import-csv': 'Импорт .csv',\n    'export-csv': 'Экспорт .csv',\n    'delete-all': 'Удалить всех',\n    'sort': 'Сортировать',\n    'filter': 'Фильтр',\n    \n    //Roster Config \n    'stars': 'Категория',\n    'type': 'Класс',\n    'name': 'Имя',\n    \n    'rank': 'Ранг',\n    'level': 'Уровень',\n    'awakened': 'Дубль',\n    'quest': 'Задание',\n    'view-guide': 'Посмотреть руководство',\n    \n    'delete': 'Удалить',\n    'cancel': 'Отмена',\n    \n    'ask-delete': 'Вы уверены, что хотите удалить?',\n    'ask-delete-all': 'Вы уверены, что хотите удалить всех чемпионов?',\n    'cannot-undo': 'Это действие не может быть отменено.',\n    \n    //Team Panel \n    'advanced-settings': 'Дополнительные настройки',\n    'team-size': 'Размер команды',\n    'algorithm': 'Алгоритм',\n    'quest-group': 'Группа задания',\n    'build': 'Построить',\n    \n    //Add Champion Page\n    'add-all': 'Добавить всех',\n   \n    //Advanced Settings Page\n    'reset-defaults': 'Восстановить стандартные настройки',\n    'champion-weights':'Уровни чемпионов',\n    'synergy-weights': 'Уровни синергии',\n    'duplicate-weights': 'Уровни дублей',\n    'choose-preset': 'Выберите предустановку...',\n    'use-levels': 'Просчитать используя звезды / ранги / уровни',\n    \n    //Tuples \n    'double': 'Двойной',\n    'triple': 'Тройной',\n    'quadruple': 'Четверной',\n    'quintuple': 'Пятерной',\n    \n    //Guide Page \n    'choose-guide': 'Выберите руководство',\n    \n    //Options\n    'options': 'Опции',\n    'share-to': 'Поделиться',\n    'facebook': 'Facebook',\n    'twitter': 'Twitter',\n    'google': 'Google',\n    'language': 'Язык',\n    'tools': 'Опции',\n    'synergy-map': 'Карта синергии',\n    'roster-manager': 'Манеджер списка',\n    \n    //Onboarding Messages \n    'onboarding-synergies': 'Используейте меню настройки списка, чтобы добавить еще чемпионов.',\n    'onboarding-roster': 'Откройте настройки, чтобы добавить нового чемпиона',\n    'onboarding-teams': 'Используйте меню строителя, чтобы создать свою команду!',\n    \n    //Guide \n    'coming-soon': 'Скоро обновление...',\n    'gameplay': 'Геймплей',\n    'special': 'Специальные атаки',\n    'signature': 'Коронная способность',\n    'heavy-attack': 'Тяжелая атака',\n    'abilities': 'Способности',\n    \n    'grade': 'Оценка',\n    'strategy': 'Стратегия',\n    \n    'damage-type': 'Тип урона',\n    'range': 'Дальний',\n    'note': 'Заметка',\n    \n    'synergies-external': 'Синергия от других чемпионов',\n    \n    'none': 'Отсутствует',\n  }\n};\n// http://collabedit.com/uuf57\n","var CoC = CoC || {};\r\nCoC.lang = CoC.lang || {};\r\n\r\n(function(){\r\n  var defaultLang = 'en';\r\n  var currentLang = 'en';\r\n\r\n  var query = {};\r\n  location.search.substr(1).split('&').map(function(str){\r\n    var attr = str.split('=');\r\n    if(attr.length === 2)\r\n      query[attr[0]] = attr[1] && unescape(attr[1]);\r\n  });\r\n  if(query['lang']){\r\n    if(CoC.lang[query['lang']]){\r\n      currentLang = query['lang'];\r\n      console.warn('Language set to \"' + currentLang + '\"');\r\n    }\r\n  }\r\n\r\n  CoC.lang.model = function(key, notFoundValue){\r\n    var value = CoC.lang[currentLang].model[key];\r\n    if(value === undefined)\r\n      value = (notFoundValue !== undefined)? notFoundValue: CoC.lang[defaultLang].model[key];\r\n    return value;\r\n  };\r\n\r\n  CoC.lang.string = function(key){\r\n    var value = CoC.lang[currentLang].string[key];\r\n    if(value === undefined)\r\n      value = CoC.lang[defaultLang].string[key];\r\n    return value;\r\n  };\r\n\r\n  CoC.lang.search = (defaultLang === currentLang)? '': '?lang='+currentLang;\r\n\r\n  CoC.lang.current = currentLang;\r\n\r\n  if(currentLang === defaultLang && query['lang'] === undefined){\r\n    var languages = [], updateLang;\r\n    if(navigator && navigator.language)\r\n      languages.push(navigator.language);\r\n    if(navigator && navigator.languages)\r\n      languages.concat(navigator.languages);\r\n    for(var i=0; i<languages.length; i++){\r\n      var lang = navigator.language.split('-')[0];\r\n      if(currentLang !== lang || CoC.lang[lang]){\r\n        updateLang = lang;\r\n        break;\r\n      }\r\n    }\r\n    if(updateLang && updateLang !== defaultLang){\r\n      query.lang = updateLang;\r\n      location.search = '?' + _.pairs(query).map(function(value){\r\n        return value[0] + '=' + escape(value[1]);\r\n      }).join('&');\r\n    }\r\n  }\r\n\r\n})();\r\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","//     Backbone.js 1.2.3\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    for (var i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model;\n      for (var i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length != set.length || _.some(this.models, function(model, index) {\n          return model !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\n\r\n(function(){\r\n\r\n  //championStarRankValue[stars][rank]\r\n  var championStarRankLevels={\r\n    1:{\r\n      1:{ levels: 10, min:100, max:175 }, \r\n      2:{ levels: 20, min:175, max:250 },\r\n      ranks: 2\r\n    },\r\n    2:{\r\n      1:{ levels: 10, min:150, max:250 }, \r\n      2:{ levels: 20, min:250, max:400 }, \r\n      3:{ levels: 30, min:400, max:600 },\r\n      ranks: 3\r\n    },\r\n    3:{\r\n      1:{ levels: 10, min:300, max:500 }, \r\n      2:{ levels: 20, min:500, max:900 }, \r\n      3:{ levels: 30, min:900, max:1200 }, \r\n      4:{ levels: 40, min:1200, max:1500 },\r\n      ranks: 4\r\n    },\r\n    4:{\r\n      1:{ levels: 10, min:600, max:1000 }, \r\n      2:{ levels: 20, min:1000, max:1500 }, \r\n      3:{ levels: 30, min:1500, max:2000 }, \r\n      4:{ levels: 40, min:2000, max:2800 }, \r\n      5:{ levels: 50, min:2800, max:3500 },\r\n      ranks: 5\r\n    }\r\n    //TODO: 5-star values\r\n  };\r\n\r\n  CoC.model.Champion = Backbone.Model.extend({\r\n    defaults: {\r\n      uid: \"champion\",\r\n      stars:2,\r\n      name: 'Champion',\r\n      shortname: null,\r\n      typeId: \"mutant\",\r\n      awakened: 0,\r\n      rank: 1,\r\n      level: 1,\r\n      grade: 0,\r\n      gradeAwakened: 0,\r\n      quest: false\r\n    },\r\n\r\n    constructor: function() {\r\n      Backbone.Model.apply(this, arguments);\r\n      var uid = this.get('uid');\r\n      var name = CoC.lang.model('champion-'+uid+'-name');\r\n      var shortname = CoC.lang.model('champion-'+uid+'-shortname', null);\r\n      if(name)\r\n        this.set('name', name);\r\n      if(shortname)\r\n        this.set('shortname', shortname);\r\n    },\r\n\r\n    value:function(){\r\n      var stars = this.get(\"stars\"), \r\n        rank = this.get(\"rank\"), \r\n        level = this.get(\"level\"), \r\n        awakened = this.get(\"awakened\");\r\n      if(level < 1 || championStarRankLevels[stars] === undefined)\r\n        return 0;\r\n      var range = championStarRankLevels[stars][rank];\r\n      if(range === undefined || level > range.levels )\r\n        return 0;\r\n      var value = range.min + (level / range.levels) * (range.max - range.min);\r\n      if(awakened > 0)\r\n        value *= 1.05 + Math.min(Math.max(1, awakened), 99) * 0.005;\r\n      return value;\r\n    },\r\n    \r\n    ranks:function(){\r\n      var stars = championStarRankLevels[this.get(\"stars\")];\r\n      if(stars === undefined)\r\n        return null;\r\n      return stars.ranks;\r\n    },\r\n    \r\n    levels:function(){\r\n      var stars = championStarRankLevels[this.get(\"stars\")];\r\n      if(stars === undefined)\r\n        return null;\r\n      var rank = stars[this.get(\"rank\")];\r\n      if(rank === undefined)\r\n        return null;\r\n      return rank.levels;\r\n    },\r\n    \r\n    stars:function(){\r\n      if(this._stars === undefined){\r\n        this._stars = [\"\", \"★\", \"★★\", \"★★★\", \"★★★★\", \"★★★★★\"][this.get(\"stars\")];\r\n      }\r\n      return this._stars;\r\n    },\r\n    \r\n    fid:function(){\r\n      if(this._fid === undefined){\r\n        this._fid = this.get(\"uid\")+\"_\"+this.get(\"stars\");\r\n      }\r\n      return this._fid;\r\n    },\r\n    \r\n    portrait:function(){\r\n      if(this._portrait === undefined){\r\n        this._portrait = 'images/champions/portrait_'+this.get('uid')+'.png';\r\n      }\r\n      return this._portrait;\r\n    },\r\n    \r\n    image:function(){\r\n      if(this._image === undefined){\r\n        this._image = 'images/champions/fullsize_'+this.get('uid')+'.png';\r\n      }\r\n      return this._image;\r\n    },\r\n    \r\n    type:function(){\r\n      if(this._type === undefined){\r\n        this._type = CoC.data.types.findWhere({ uid:this.get(\"typeId\") });\r\n      }\r\n      return this._type;\r\n    },\r\n    \r\n    crystals:function(){\r\n      if(this._crystals === undefined){\r\n        this._crystals = [];\r\n        var ccs = CoC.data.crystalChampions.find({ championId:this.get(\"uid\"), championStars:this.get(\"stars\") });\r\n        for(var i=0; i<ccs.length; i++)\r\n          this._crystals.push(ccs.crystal());\r\n      }\r\n      return this._crystals;\r\n    },\r\n    \r\n    //clean an import's variable types\r\n    update:function(){\r\n      var uid = this.get('uid');\r\n      var stars = this.get('stars');\r\n      var other = CoC.data.champions.findWhere({ uid:uid, stars:stars });\r\n      if(!other)\r\n        return false;\r\n\r\n      this.set(\"name\", CoC.lang.model('champion-'+uid+'-name'));\r\n      this.set(\"shortname\", CoC.lang.model('champion-'+uid+'-shortname', null));\r\n      this.set(\"typeId\", other.get(\"typeId\"));\r\n      this.set(\"stars\", parseInt(stars, 10) || 1);\r\n      this.set(\"rank\", parseInt(this.get(\"rank\"), 10) || 1);\r\n      this.set(\"level\", parseInt(this.get(\"level\"), 10) || 1);\r\n      this.set(\"awakened\", parseInt(this.get(\"awakened\"), 10) || 0);\r\n      return true;\r\n    }\r\n  });\r\n  \r\n})();\r\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\nCoC.model.Effect = Backbone.Model.extend({\r\n\tdefaults: {\r\n    name: \"Effect\",\r\n    uid: \"effect\",\r\n\t\tbase: 10,\r\n    amount:0,\r\n    image:\"\",\r\n    altimage:\"\"\r\n  },\r\n\r\n  constructor: function() {\r\n    Backbone.Model.apply(this, arguments);\r\n    var uid = this.get('uid');\r\n    var name = CoC.lang.model('effect-'+uid+'-name');\r\n    var description = CoC.lang.model('effect-'+uid+'-description');\r\n    if(name)\r\n      this.set('name', name);\r\n    if(description)\r\n      this.set('description', description);\r\n  },\r\n\r\n  image:function(){\r\n    return this.get(\"image\") + \".jpg\";\r\n  },\r\n\r\n  imageOff:function(){\r\n    return this.get(\"image\") + \"_off.jpg\";\r\n  },\r\n\r\n  championIds:function(ids){\r\n    if(ids){\r\n      this._championIds = [];\r\n      for(var id in ids)\r\n        this._championIds.push(id);\r\n    }\r\n    return this._championIds;\r\n  }\r\n\r\n});\r\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\nCoC.model.Synergy = Backbone.Model.extend({\r\n\tdefaults: {\r\n    fromId: \"champion\",\r\n    fromStars: 1,\r\n\t\ttoId: 'champion',\r\n\t\teffectId: \"effect\",\r\n    effectAmount: 20\r\n  },\r\n  \r\n  to:function(){\r\n    if(this._to === undefined){\r\n      this._to = CoC.data.champions.findWhere({ uid:this.get(\"toId\") });\r\n    }\r\n    return this._to;\r\n  },\r\n  \r\n  from:function(){\r\n    if(this._from === undefined){\r\n      this._from = CoC.data.champions.findWhere({ uid:this.get(\"fromId\"), stars:this.get(\"fromStars\") });\r\n    }\r\n    return this._from;\r\n  },\r\n  \r\n  effect: function(){\r\n    if(this._effect === undefined){\r\n      this._effect = CoC.data.effects.findWhere({ uid:this.get(\"effectId\") });\r\n    }\r\n    return this._effect;\r\n  }\r\n});\r\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\nCoC.model.Type = Backbone.Model.extend({\r\n\tdefaults: {\r\n    name: \"Type\",\r\n    uid: \"type\",\r\n  },\r\n\r\n  constructor: function() {\r\n    Backbone.Model.apply(this, arguments);\r\n    var uid = this.get('uid');\r\n    var name = CoC.lang.model('type-'+uid+'-name');\r\n    if(name)\r\n      this.set('name', name);\r\n  },\r\n\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Champions\r\nCoC.data.champions = new Backbone.Collection([\r\n\r\n  { uid:\"blackbolt\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"blackbolt\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"blackbolt\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"captainmarvel\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"captainmarvel\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"drax\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"drax\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"drax\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 1 },\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"msmarvel\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"msmarvel\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"ronan\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"ronan\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"ronan\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"spidermanblack\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"spidermanblack\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"superiorironman\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"superiorironman\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"superiorironman\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"thor\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"thor\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"thor\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"thorjanefoster\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"thorjanefoster\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"venom\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"venom\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 1 },\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"ironpatriot\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"ironpatriot\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"hulkbuster\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"hulkbuster\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"hulkbuster\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"kang\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"rocket\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"rocket\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"starlord\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"starlord\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"starlord\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"vision\", typeId:\"tech\", stars: 1 },\r\n  { uid:\"vision\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"vision\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"vision\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"thevision\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"thevision\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"thevision\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"ultron\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"ultron\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"ultron\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"warmachine\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"warmachine\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 1 },\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"cyclops\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"cyclops\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"cyclops\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"deadpool\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"deadpool\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"deadpool\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"deadpoolxforce\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"deadpoolxforce\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"magneto\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"magneto\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"magnetomarvelnow\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"magnetomarvelnow\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"storm\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"storm\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"storm\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 1 },\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 1 },\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"blackwidow\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"blackwidow\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"blackwidow\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"daredevil\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"daredevil\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"daredevilnetflix\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"daredevilnetflix\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"elektra\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"elektra\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 1 },\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"moonknight\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"moonknight\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"punisher\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"punisher\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"punisher\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"wintersoldier\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"wintersoldier\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"wintersoldier\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"abomination\", typeId:\"science\", stars: 2 },\r\n  { uid:\"abomination\", typeId:\"science\", stars: 3 },\r\n  { uid:\"abomination\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"antman\", typeId:\"science\", stars: 2 },\r\n  { uid:\"antman\", typeId:\"science\", stars: 3 },\r\n  { uid:\"antman\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"captainamerica\", typeId:\"science\", stars: 2 },\r\n  { uid:\"captainamerica\", typeId:\"science\", stars: 3 },\r\n  { uid:\"captainamerica\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"captainamericawwii\", typeId:\"science\", stars: 3 },\r\n  { uid:\"captainamericawwii\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"electro\", typeId:\"science\", stars: 3 },\r\n  { uid:\"electro\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"hulk\", typeId:\"science\", stars: 1 },\r\n  { uid:\"hulk\", typeId:\"science\", stars: 2 },\r\n  { uid:\"hulk\", typeId:\"science\", stars: 3 },\r\n  { uid:\"hulk\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"joefixit\", typeId:\"science\", stars: 3 },\r\n  { uid:\"joefixit\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"rhino\", typeId:\"science\", stars: 2 },\r\n  { uid:\"rhino\", typeId:\"science\", stars: 3 },\r\n  { uid:\"rhino\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"spidergwen\", typeId:\"science\", stars: 3 },\r\n  { uid:\"spidergwen\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 1 },\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 2 },\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 3 },\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"spidermanmorales\", typeId:\"science\", stars: 3 },\r\n  { uid:\"spidermanmorales\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"yellowjacket\", typeId:\"science\", stars: 2 },\r\n  { uid:\"yellowjacket\", typeId:\"science\", stars: 3 },\r\n  { uid:\"yellowjacket\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"drstrange\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"drstrange\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"ironfist\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"ironfist\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"ironfist\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 1 },\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"magik\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"magik\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"magik\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 1 },\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"unstoppablecolossus\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"unstoppablecolossus\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"unstoppablecolossus\", typeId:\"mystic\", stars: 4 }\r\n  \r\n], {\r\n  model: CoC.model.Champion\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Effects\r\nCoC.data.effects = new Backbone.Collection([\r\n\r\n  { uid: \"attack\", image:\"images/effects/attack\", base:5 },\r\n  { uid: \"stun\", image:\"images/effects/stun\", base:15 },\r\n  { uid: \"critrate\", image:\"images/effects/critical\", base:5 },\r\n  { uid: \"critdamage\", image:\"images/effects/critical\", base:15 },\r\n  { uid: \"powergain\", image:\"images/effects/mana\", base:3 },\r\n  { uid: \"powersteal\", image:\"images/effects/mana_steal\", base:3 },\r\n  { uid: \"perfectblock\", image:\"images/effects/block\", base:3 },\r\n  { uid: \"block\", image:\"images/effects/block\", base:10 },\r\n  { uid: \"armor\", image:\"images/effects/armor\", base:4 },\r\n  { uid: \"health\", image:\"images/effects/health\", base:4 },\r\n  { uid: \"healthsteal\", image:\"images/effects/health_steal\", base:4 }\r\n\r\n], {\r\n  model: CoC.model.Effect\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Synergies\r\nCoC.data.synergies = new Backbone.Collection([\r\n\r\n  { fromId:\"blackbolt\", fromStars: 2, toId: \"cyclops\", effectId:\"block\", effectAmount:10 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"cyclops\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"ronan\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"hulk\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"cyclops\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"ronan\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"hulk\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"captainmarvel\", fromStars: 3, toId: \"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainmarvel\", fromStars: 3, toId: \"gamora\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainmarvel\", fromStars: 3, toId: \"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"gamora\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"wolverine\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"drax\", fromStars:2, toId:\"starlord\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"drax\", fromStars:2, toId:\"gamora\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"drax\", fromStars:3, toId:\"starlord\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"drax\", fromStars:3, toId:\"gamora\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"drax\", fromStars:4, toId:\"starlord\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"drax\", fromStars:4, toId:\"gamora\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"gamora\", fromStars:2, toId:\"starlord\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"gamora\", fromStars:3, toId:\"starlord\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"gamora\", fromStars:3, toId:\"drax\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"gamora\", fromStars:4, toId:\"starlord\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"gamora\", fromStars:4, toId:\"drax\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"hulk\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"thor\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"hulk\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"ronan\", fromStars:2, toId:\"blackbolt\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"ronan\", fromStars:3, toId:\"blackbolt\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"ronan\", fromStars:3, toId:\"ironman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"ronan\", fromStars:3, toId:\"gamora\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"ronan\", fromStars:4, toId:\"blackbolt\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"ronan\", fromStars:4, toId:\"ironman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"ronan\", fromStars:4, toId:\"gamora\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"spidermanblack\", fromStars:3, toId:\"storm\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"spidermanblack\", fromStars:3, toId:\"electro\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"spidermanblack\", fromStars:4, toId:\"storm\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"spidermanblack\", fromStars:4, toId:\"electro\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"superiorironman\", fromStars:2, toId:\"captainamerica\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"superiorironman\", fromStars:2, toId:\"daredevil\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"superiorironman\", fromStars:2, toId:\"thor\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"superiorironman\", fromStars:3, toId:\"captainamerica\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"superiorironman\", fromStars:3, toId:\"daredevil\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"superiorironman\", fromStars:3, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"superiorironman\", fromStars:4, toId:\"captainamerica\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"superiorironman\", fromStars:4, toId:\"daredevil\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"superiorironman\", fromStars:4, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n\r\n  { fromId:\"thor\", fromStars:2, toId:\"drstrange\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"thor\", fromStars:2, toId:\"ironman\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"thor\", fromStars:3, toId:\"drstrange\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"thor\", fromStars:3, toId:\"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"thor\", fromStars:3, toId:\"juggernaut\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"thor\", fromStars:4, toId:\"drstrange\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"thor\", fromStars:4, toId:\"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"thor\", fromStars:4, toId:\"juggernaut\", effectId:\"armor\", effectAmount:7 },\r\n\r\n  { fromId:\"ironman\", fromStars:2, toId:\"thor\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"ironman\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironman\", fromStars:3, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"ironman\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironman\", fromStars:4, toId:\"thor\", effectId:\"perfectblock\", effectAmount:5 },\r\n  \r\n  { fromId:\"ironpatriot\", fromStars:3, toId:\"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironpatriot\", fromStars:3, toId:\"spiderman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"ironpatriot\", fromStars:3, toId:\"captainamerica\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"ironpatriot\", fromStars:4, toId:\"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironpatriot\", fromStars:4, toId:\"spiderman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"ironpatriot\", fromStars:4, toId:\"captainamerica\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"kang\", fromStars:4, toId:\"blackbolt\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"kang\", fromStars:4, toId:\"thevision\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"kang\", fromStars:4, toId:\"thor\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"kang\", fromStars:4, toId:\"spidermanblack\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"hulkbuster\", fromStars:2, toId:\"hulk\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"hulkbuster\", fromStars:3, toId:\"hulk\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"hulkbuster\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"hulkbuster\", fromStars:3, toId:\"superiorironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"hulkbuster\", fromStars:4, toId:\"hulk\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"hulkbuster\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:6 },\r\n  { fromId:\"hulkbuster\", fromStars:4, toId:\"superiorironman\", effectId:\"perfectblock\", effectAmount:6 },\r\n\r\n  { fromId:\"rocket\", fromStars:3, toId:\"starlord\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"rocket\", fromStars:3, toId:\"ronan\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"rocket\", fromStars:3, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"rocket\", fromStars:3, toId:\"drax\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"starlord\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"ronan\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"drax\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"starlord\", fromStars:2, toId:\"rocket\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"starlord\", fromStars:2, toId:\"drax\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"starlord\", fromStars:3, toId:\"rocket\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"starlord\", fromStars:3, toId:\"drax\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"starlord\", fromStars:3, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"starlord\", fromStars:4, toId:\"rocket\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"starlord\", fromStars:4, toId:\"drax\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"starlord\", fromStars:4, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"vision\", fromStars:2, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"vision\", fromStars:2, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"vision\", fromStars:3, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"vision\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"vision\", fromStars:4, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"vision\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"thevision\", fromStars:2, toId:\"ironman\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"thevision\", fromStars:2, toId:\"scarletwitch\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"thevision\", fromStars:3, toId:\"ironman\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"thevision\", fromStars:3, toId:\"scarletwitch\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"thevision\", fromStars:3, toId:\"ultron\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"thevision\", fromStars:4, toId:\"ironman\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"thevision\", fromStars:4, toId:\"scarletwitch\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"thevision\", fromStars:4, toId:\"ultron\", effectId:\"attack\", effectAmount:5 },\r\n\r\n  { fromId:\"ultron\", fromStars:2, toId:\"ironman\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"ultron\", fromStars:2, toId:\"scarletwitch\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"ultron\", fromStars:3, toId:\"ironman\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"ultron\", fromStars:3, toId:\"scarletwitch\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ultron\", fromStars:4, toId:\"ironman\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"ultron\", fromStars:4, toId:\"scarletwitch\", effectId:\"armor\", effectAmount:6 },\r\n  \r\n  { fromId:\"warmachine\", fromStars:3, toId:\"hulkbuster\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"warmachine\", fromStars:3, toId:\"hawkeye\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"warmachine\", fromStars:3, toId:\"blackwidow\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"hulkbuster\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"blackpanther\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"hawkeye\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"blackwidow\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"colossus\", fromStars:2, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"colossus\", fromStars:3, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"colossus\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"colossus\", fromStars:3, toId:\"magik\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"colossus\", fromStars:4, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"colossus\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"colossus\", fromStars:4, toId:\"magik\", effectId:\"health\", effectAmount:5 },\r\n\r\n  { fromId:\"cyclops\", fromStars:2, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"cyclops\", fromStars:3, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"cyclops\", fromStars:3, toId:\"magneto\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"cyclops\", fromStars:4, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"cyclops\", fromStars:4, toId:\"magneto\", effectId:\"attack\", effectAmount:5 },\r\n\r\n  { fromId:\"deadpool\", fromStars:2, toId:\"punisher\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"deadpool\", fromStars:3, toId:\"rhino\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"deadpool\", fromStars:3, toId:\"wolverine\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"deadpool\", fromStars:3, toId:\"punisher\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"deadpool\", fromStars:4, toId:\"rhino\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"deadpool\", fromStars:4, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"deadpool\", fromStars:4, toId:\"punisher\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"deadpoolxforce\", fromStars:3, toId:\"moonknight\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"deadpoolxforce\", fromStars:3, toId:\"deadpool\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"deadpoolxforce\", fromStars:4, toId:\"magnetomarvelnow\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"deadpoolxforce\", fromStars:4, toId:\"moonknight\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"deadpoolxforce\", fromStars:4, toId:\"deadpool\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"magneto\", fromStars:3, toId:\"wolverine\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"magneto\", fromStars:3, toId:\"cyclops\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"magneto\", fromStars:3, toId:\"storm\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"magneto\", fromStars:4, toId:\"wolverine\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"magneto\", fromStars:4, toId:\"cyclops\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"magneto\", fromStars:4, toId:\"storm\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"magnetomarvelnow\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:3, toId:\"magik\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:3, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:4, toId:\"magik\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:4, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"storm\", fromStars:2, toId:\"blackpanther\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"storm\", fromStars:3, toId:\"magik\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"storm\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"storm\", fromStars:3, toId:\"blackpanther\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"magik\", effectId:\"armor\", effectAmount:7 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"blackpanther\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"magneto\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"wolverine\", fromStars:2, toId:\"cyclops\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"wolverine\", fromStars:3, toId:\"cyclops\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"wolverine\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"wolverine\", fromStars:3, toId:\"magneto\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"wolverine\", fromStars:4, toId:\"cyclops\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"wolverine\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"wolverine\", fromStars:4, toId:\"magneto\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"blackpanther\", fromStars:2, toId:\"ironfist\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"blackpanther\", fromStars:3, toId:\"ironfist\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"blackpanther\", fromStars:3, toId:\"storm\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"blackpanther\", fromStars:3, toId:\"deadpool\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"blackpanther\", fromStars:4, toId:\"ironfist\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"blackpanther\", fromStars:4, toId:\"storm\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"blackpanther\", fromStars:4, toId:\"deadpool\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"daredevil\", fromStars:3, toId:\"superiorironman\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"daredevil\", fromStars:3, toId:\"blackwidow\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"daredevil\", fromStars:3, toId:\"elektra\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"daredevil\", fromStars:4, toId:\"superiorironman\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"daredevil\", fromStars:4, toId:\"blackwidow\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"daredevil\", fromStars:4, toId:\"elektra\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"elektra\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"elektra\", fromStars:3, toId:\"daredevil\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"elektra\", fromStars:3, toId:\"blackwidow\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"daredevil\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"deadpool\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"blackwidow\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"hawkeye\", fromStars:2, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"hawkeye\", fromStars:3, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"hawkeye\", fromStars:3, toId:\"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"hawkeye\", fromStars:4, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"hawkeye\", fromStars:4, toId:\"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"hawkeye\", fromStars:4, toId:\"hulk\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"moonknight\", fromStars:3, toId:\"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"moonknight\", fromStars:3, toId:\"daredevil\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"moonknight\", fromStars:3, toId:\"deadpoolxforce\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"daredevil\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"deadpoolxforce\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"ironpatriot\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"punisher\", fromStars:2, toId:\"spiderman\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"punisher\", fromStars:3, toId:\"spiderman\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"punisher\", fromStars:3, toId:\"rhino\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"punisher\", fromStars:4, toId:\"spiderman\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"punisher\", fromStars:4, toId:\"rhino\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"wintersoldier\", fromStars:2, toId:\"wolverine\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"wintersoldier\", fromStars:2, toId:\"captainamerica\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"wintersoldier\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"wintersoldier\", fromStars:3, toId:\"captainamerica\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"wintersoldier\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"wintersoldier\", fromStars:4, toId:\"captainamerica\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"blackwidow\", fromStars:2, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"blackwidow\", fromStars:2, toId:\"wintersoldier\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"hulk\", effectId:\"stun\", effectAmount:20 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"wintersoldier\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"hawkeye\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"hulk\", effectId:\"stun\", effectAmount:25 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"wintersoldier\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"hawkeye\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"abomination\", fromStars:2, toId:\"rhino\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"abomination\", fromStars:3, toId:\"rhino\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"abomination\", fromStars:3, toId:\"hulk\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"abomination\", fromStars:4, toId:\"rhino\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"abomination\", fromStars:4, toId:\"hulk\", effectId:\"attack\", effectAmount:5 },\r\n\r\n  { fromId:\"antman\", fromStars:2, toId:\"yellowjacket\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"antman\", fromStars:2, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"antman\", fromStars:3, toId:\"yellowjacket\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"antman\", fromStars:3, toId:\"spiderman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"antman\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"hulk\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"yellowjacket\", effectId:\"attack\", effectAmount:6 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"spiderman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"captainamerica\", fromStars:2, toId:\"spiderman\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"captainamerica\", fromStars:2, toId:\"superiorironman\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"captainamerica\", fromStars:2, toId:\"ironman\", effectId:\"armor\", effectAmount:3 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"superiorironman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"superiorironman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  \r\n  { fromId:\"captainamericawwii\", fromStars:3, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamericawwii\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamericawwii\", fromStars:4, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainamericawwii\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  \r\n  { fromId:\"electro\", fromStars:3, toId:\"spiderman\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"electro\", fromStars:3, toId:\"rhino\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"electro\", fromStars:4, toId:\"spiderman\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"electro\", fromStars:4, toId:\"rhino\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"hulk\", fromStars:2, toId:\"thor\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"hulk\", fromStars:3, toId:\"thor\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"hulk\", fromStars:3, toId:\"abomination\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"hulk\", fromStars:3, toId:\"hawkeye\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"hulk\", fromStars:4, toId:\"thor\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"hulk\", fromStars:4, toId:\"abomination\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"hulk\", fromStars:4, toId:\"hawkeye\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"joefixit\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"joefixit\", fromStars:3, toId:\"moonknight\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"joefixit\", fromStars:3, toId:\"hulk\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"joefixit\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"joefixit\", fromStars:4, toId:\"moonknight\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"joefixit\", fromStars:4, toId:\"msmarvel\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"joefixit\", fromStars:4, toId:\"hulk\", effectId:\"attack\", effectAmount:6 },\r\n\r\n  { fromId:\"rhino\", fromStars:2, toId:\"spiderman\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"rhino\", fromStars:2, toId:\"abomination\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"rhino\", fromStars:3, toId:\"spiderman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"rhino\", fromStars:3, toId:\"abomination\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"rhino\", fromStars:3, toId:\"electro\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"rhino\", fromStars:4, toId:\"spiderman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"rhino\", fromStars:4, toId:\"abomination\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"rhino\", fromStars:4, toId:\"electro\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"spiderman\", fromStars:1, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:1, toId:\"hawkeye\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:2, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:2, toId:\"hawkeye\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"hawkeye\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"electro\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"wolverine\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"hawkeye\", effectId:\"attack\", effectAmount:6 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"electro\", effectId:\"health\", effectAmount:7 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"yellowjacket\", fromStars:2, toId:\"antman\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"yellowjacket\", fromStars:2, toId:\"ultron\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"yellowjacket\", fromStars:3, toId:\"antman\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"yellowjacket\", fromStars:3, toId:\"ultron\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"yellowjacket\", fromStars:4, toId:\"antman\", effectId:\"attack\", effectAmount:6 },\r\n  { fromId:\"yellowjacket\", fromStars:4, toId:\"ultron\", effectId:\"critdamage\", effectAmount:25 },\r\n  \r\n  { fromId:\"drstrange\", fromStars:3, toId:\"thor\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"drstrange\", fromStars:3, toId:\"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"drstrange\", fromStars:3, toId:\"scarletwitch\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"drstrange\", fromStars:3, toId:\"blackbolt\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"thor\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"scarletwitch\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"blackbolt\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"ironfist\", fromStars:2, toId:\"blackpanther\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"ironfist\", fromStars:3, toId:\"blackpanther\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironfist\", fromStars:3, toId:\"drstrange\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironfist\", fromStars:4, toId:\"blackpanther\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironfist\", fromStars:4, toId:\"drstrange\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironfist\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"juggernaut\", fromStars:2, toId:\"colossus\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"juggernaut\", fromStars:3, toId:\"drstrange\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"juggernaut\", fromStars:3, toId:\"colossus\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"juggernaut\", fromStars:3, toId:\"hulk\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"juggernaut\", fromStars:4, toId:\"drstrange\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"juggernaut\", fromStars:4, toId:\"colossus\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"juggernaut\", fromStars:4, toId:\"hulk\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"magik\", fromStars:2, toId:\"colossus\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"magik\", fromStars:3, toId:\"storm\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"magik\", fromStars:3, toId:\"colossus\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"magik\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"storm\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"colossus\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"scarletwitch\", fromStars:2, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"scarletwitch\", fromStars:3, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"scarletwitch\", fromStars:3, toId:\"vision\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"scarletwitch\", fromStars:4, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"scarletwitch\", fromStars:4, toId:\"vision\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"unstoppablecolossus\", fromStars:2, toId:\"magik\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:2, toId:\"juggernaut\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"magik\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"juggernaut\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"magik\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"juggernaut\", effectId:\"critdamage\", effectAmount:25 }\r\n  \r\n], {\r\n  model: CoC.model.Synergy\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Champion Types\r\nCoC.data.types = new Backbone.Collection([\r\n\r\n  { uid:\"cosmic\", image:\"images/icons/cosmic.png\" },\r\n  { uid:\"tech\", image:\"images/icons/tech.png\" },\r\n  { uid:\"mutant\", image:\"images/icons/mutant.png\" },\r\n  { uid:\"skill\", image:\"images/icons/skill.png\" },\r\n  { uid:\"science\", image:\"images/icons/science.png\" },\r\n  { uid:\"mystic\", image:\"images/icons/mystic.png\" }\r\n  \r\n], {\r\n  model: CoC.model.Type\r\n});\r\n","var CoC = CoC || {};\r\nCoC.algorithm = CoC.algorithm || {};\r\n\r\n(function(){\r\n  \"use strict\";\r\n\r\n  CoC.algorithm[\"greedy\"]=new function(){\r\n    this.uid = 'greedy';\r\n    this.quest = true;\r\n    this.extras = false;\r\n\r\n    this.build=function(options){\r\n      var i, j, o, t, team, index;\r\n      var size = parseInt(options.size, 10), teams = {}, list = [], preselect = [], typeWeights = [], progress = null;\r\n      preProcess(options.champions, list, typeWeights, options.levels);\r\n      \r\n      if(options.quest)\r\n        for(i=list.length-1;i>=0;i--)\r\n          if(list[i].quest){\r\n            preselect.push(list[i]);\r\n            list.splice(i,1);\r\n          }\r\n          \r\n      if(options.progress)\r\n        progress={\r\n          current:0,\r\n          max:(function(r){\r\n            var value = 0;\r\n            for(var n = list.length; n > r; n-=r){\r\n              value += combination(n, r);\r\n              if(options.quest)\r\n                break;\r\n            }\r\n            return value;\r\n          })(preselect.length? size - preselect.length: size),\r\n          callback:options.progress\r\n        };\r\n\r\n      if(preselect.length > 0){      \r\n        if(preselect.length > size){\r\n          team = getTopPartner(preselect, 0, size, typeWeights, progress);\r\n        }\r\n        else{\r\n          var synergies = [], types = getTypes(preselect);\r\n          team = getNextPartner(list, preselect, synergies, types, 0, size, typeWeights, progress);\r\n        }\r\n        if(team && team.value > 0)\r\n          teams[0]=team;\r\n      }\r\n      else{\r\n        \r\n        var team_index = 0;\r\n        do {\r\n          team = getTopPartner(list, 0, size, typeWeights, progress);\r\n          if(team){          \r\n            if (team.value){\r\n              if(!options.quest)\r\n                team = getSynergyCulledTeam(team, typeWeights);\r\n              \r\n              teams[team_index]=team;\r\n              teams.length=++team_index;\r\n              for(o in team.champions)\r\n                list.splice(list.indexOf(team.champions[o]),1);\r\n                \r\n              if(options.quest)\r\n                break;\r\n            }\r\n            else break;\r\n          }\r\n        } while(team !== null);\r\n        \r\n        //check if we have enough\r\n        var needed = 0;\r\n        for(i in teams)\r\n          if(i !== 'length')\r\n            needed += size - teams[i].champions.length;\r\n          \r\n        //break up teams if we dont have enough\r\n        while(list.length < needed){\r\n          i = teams.length - 1;\r\n          for(t in teams[i].champions){\r\n            list.push(teams[i].champions[t]);\r\n            needed--;\r\n          }\r\n          delete teams[i];\r\n          teams.length--;\r\n        }\r\n        \r\n        var appendToTeam = function appendToTeam(list, object){\r\n          var l = list.slice();\r\n          l.push(object);\r\n          return l;\r\n        };\r\n        \r\n        //add into existing teams, using the comparison to find best partner\r\n        for(i=teams.length-1; i>=0; i--){\r\n          if(teams[i].champions.length < size){\r\n            team = getNextPartner(list, teams[i].champions, teams[i].synergies, getTypes(teams[i].champions), 0, size, typeWeights, progress);\r\n            if(team){\r\n              for(o in team.champions){\r\n                index = list.indexOf(team.champions[o]);\r\n                if(index != -1)\r\n                  list.splice(index,1);\r\n              }\r\n              teams[i] = team;\r\n            }\r\n            else{\r\n              for(o in teams[i].champions)\r\n                list.push(teams[i].champions[o]);\r\n              delete teams[i];\r\n            }\r\n          }\r\n        }\r\n        \r\n        delete teams.length;\r\n      }\r\n        \r\n      return postProcess(teams, (options.extras && options.quest !== true)? list: undefined);\r\n    };\r\n    \r\n    function preProcess(champions, list, typeWeights, useLevels){\r\n      var i, champion, synergies;\r\n\r\n      for(i=2; i<=5; i++)\r\n        typeWeights[i] = CoC.settings.getDuplicateWeight(i);\r\n        \r\n      for(i=0; i<champions.length; i++){\r\n        champion = champions[i];\r\n        \r\n        synergies = {};\r\n        _(CoC.data.synergies.where({ fromId:champion.get(\"uid\"), fromStars:champion.get(\"stars\") })).each(function(synergy){\r\n          var effect = synergy.effect();\r\n          synergies[synergy.get(\"toId\")]={\r\n            id:synergy.get(\"toId\"),\r\n            fromId:synergy.get(\"fromId\"),\r\n            fromStars:synergy.get(\"fromStars\"),\r\n            value:CoC.settings.getWeight(synergy.get(\"effectId\")) * synergy.get(\"effectAmount\") / effect.get(\"base\")\r\n          };\r\n        });\r\n        \r\n        list.push({\r\n          id:champion.get(\"uid\"),\r\n          stars:champion.get(\"stars\"),\r\n          quest:champion.get(\"quest\"),\r\n          data:champion,\r\n          type:CoC.data.types.indexOf(champion.type()),\r\n          synergies:synergies,\r\n          value:calculateChampionValue(champion, useLevels)\r\n        });\r\n      }  \r\n    }\r\n    \r\n    function postProcess(teams, extras){\r\n      var i, o, \r\n        result = {\r\n          teams:[],\r\n          extras:[]\r\n        };\r\n      for(i in teams){\r\n        var team = [];    \r\n        for(o in teams[i].champions)\r\n          team.push(teams[i].champions[o].data);\r\n        result.teams.push(team);\r\n      }\r\n      if(extras !== undefined){\r\n        for(o in extras)\r\n          result.extras.push(extras[o].data);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    function getTopPartner(list, index, depth, typeWeights, progress){\r\n      if(index >= list.length)\r\n        return null;\r\n      var current = getNextPartner(list, addPartnerHero([], list[index]), [], getTypes([ list[index] ]), index+1, depth, typeWeights, progress);\r\n      if(current === null)\r\n        return null;\r\n      var next = getTopPartner(list,index+1,depth, typeWeights, progress);\r\n      return (compareTeams(current,next) >= 0)? current: next;\r\n    }\r\n    \r\n    function getNextPartner(list, champions, synergies, types, index, depth, typeWeights, progress){\r\n      if(champions.length == depth){\r\n        if(progress)\r\n          progress.callback(++progress.current, progress.max);\r\n        return {\r\n          champions:champions,\r\n          synergies:synergies,\r\n          value:getTeamValue(champions, synergies, types, typeWeights)\r\n        };\r\n      }\r\n      if(index == list.length)\r\n        return null;\r\n      var current = getNextPartner(list, \r\n        addPartnerHero(champions, list[index]), \r\n        addPartnerSynergies(synergies, champions, list[index]), \r\n        addPartnerType(types, list[index]), \r\n        index+1, depth, typeWeights, progress\r\n      );\r\n      var next = getNextPartner(list, champions, synergies, types, index+1, depth, typeWeights, progress);\r\n\r\n      return (compareTeams(current,next) >= 0)? current: next;\r\n    }\r\n    \r\n    function addPartnerHero(list, hero){\r\n      var champions = list.slice();\r\n      champions.push(hero);\r\n      return champions;\r\n    }\r\n    \r\n    function addPartnerType(list, hero){\r\n      var types = list.slice();\r\n      types[hero.type]++;\r\n      return types;\r\n    }\r\n\r\n    function getTypes(champions){\r\n      var types=[0,0,0,0,0,0], i;\r\n      if(champions !== undefined)\r\n        for(i=0; i<champions.length; i++)\r\n          types[champions[i].type]++;\r\n      return types;\r\n    }\r\n    \r\n    function addPartnerSynergies(oldSynergies, list, next){\r\n      var synergies = oldSynergies.slice(), i;    \r\n      for(i=0; i<list.length; i++){\r\n        if(list[i].synergies[next.id] !== undefined)\r\n          synergies.push(list[i].synergies[next.id]);\r\n        if(next.synergies[list[i].id] !== undefined)\r\n          synergies.push(next.synergies[list[i].id]);\r\n      }\r\n      return synergies;\r\n    }\r\n    \r\n    function getSynergies(list){\r\n      if(list.length < 2)\r\n        return [];\r\n    \r\n      var champions = [], synergies = [], remaining = champions.slice();\r\n      while(remaining.length > 0){\r\n        var hero = remaining[0];\r\n        remaining.splice(0,1);\r\n        synergies = addPartnerSynergies(synergies, champions, hero);\r\n        champions.push(hero);\r\n      }\r\n      return synergies;\r\n    }\r\n      \r\n    function getTeamValue(champions, synergies, types, typeWeights){\r\n      var vsynergies = 0, vchampions = 0, vtypes = 1, i;\r\n      for(i in synergies)\r\n        vsynergies += synergies[i].value;\r\n      for(i in champions)\r\n        vchampions += champions[i].value;\r\n      for(i in types)\r\n        if(types[i] > 1)\r\n          vtypes *= typeWeights[types[i]];\r\n      return vsynergies * vchampions * vtypes;\r\n    }\r\n    \r\n    function compareTeams(a, b){\r\n      if(b === null)\r\n        return 1;\r\n      return a.value - b.value;\r\n    }\r\n    \r\n    function getSynergyCulledTeam(team, typeWeights){\r\n      var types = [0,0,0,0,0,0], culled = {\r\n        champions:[],\r\n        synergies:team.synergies,\r\n        value:0\r\n      }, i, s, cull;\r\n      for(i=0;i<team.champions.length;i++ ){\r\n        cull = true;\r\n        synergies: for(s=0;s<team.synergies.length;s++){\r\n        \r\n          var from = team.synergies[s].fromId === team.champions[i].id && team.synergies[s].fromStars === team.champions[i].stars;\r\n          var to = team.synergies[s].id === team.champions[i].id;\r\n          if(to || from){\r\n            addPartnerType(types, team.champions[i]);\r\n            culled.champions.push(team.champions[i]);\r\n            break synergies;\r\n          }\r\n        }\r\n      }\r\n      culled.value = getTeamValue(culled.champions, culled.synergies, types, typeWeights);\r\n      return culled;\r\n    }\r\n  };\r\n\r\n  CoC.algorithm[\"shuffle\"]=new function(){\r\n    this.uid = 'shuffle';\r\n    this.quest = false;\r\n    this.extras = true;\r\n    \r\n    this.build=function(options){\r\n      var i, j;\r\n      var size = parseInt(options.size, 10), maxTeams = Math.floor(options.champions.length/size), forceExtras = maxTeams * size;\r\n      var heroMap = {}, synergyMap = {}, typeWeights = {}, teamValues = {};\r\n      preprocess(options.champions, heroMap, synergyMap, typeWeights, options.levels);\r\n    \r\n      var swaps;\r\n      \r\n      function checkValueAndSwap(array, a, b){\r\n        //get team values and counts with swaps\r\n        var v1a = getTeamValue(array, a), v1b = getTeamValue(array, b),\r\n          v2a = getTeamValue(array, a, b), v2b = getTeamValue(array, b, a), \r\n          count1 = (v1a > 0? 1: 0) + (v1b > 0? 1: 0),\r\n          count2 = (v2a > 0? 1: 0) + (v2b > 0? 1: 0);\r\n        \r\n        //dont accept less teams\r\n        if(count1 > count2)\r\n          return false;\r\n          \r\n        //more teams, or more value\r\n        if(count2 > count1 || (v2a + v2b > v1a + v1b)){\r\n          var tmp = array[a];\r\n          array[a] = array[b];\r\n          array[b] = tmp;\r\n          swaps++;\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    \r\n      function getTeamValue(array, index, swap){\r\n        if(index >= forceExtras)\r\n          return 0;\r\n      \r\n        var start = Math.floor(index/size) * size, team = array.slice(start, start + size);\r\n        if(swap !== undefined)\r\n          team[index % size] = array[swap];\r\n          \r\n        var tid = getTeamId(team), value = teamValues[tid];\r\n        if(value === undefined){\r\n          var hvalue = 0, svalue = 0, types = {};\r\n          for(var i=0; i<team.length; i++){\r\n            var hero = team[i];\r\n            //get my value\r\n            hvalue += hero.value;\r\n            //get my synergies\r\n            var synergies = synergyMap[hero.fid];\r\n            for(var j=0; j<team.length; j++){\r\n              var synergy = synergies[team[j].id];\r\n              if(synergy)\r\n                svalue += synergy.value;\r\n            }\r\n            //get my type dupes\r\n            types[hero.type] = (types[hero.type] || 0) + 1;\r\n          }\r\n          var cvalue = 1;\r\n          for(i in types)\r\n            if(types[i] > 1)\r\n              cvalue *= typeWeights[types[i]] || 1;\r\n          //combine them\r\n          teamValues[tid] = value = hvalue * svalue * cvalue;\r\n        }\r\n        return value;\r\n      }\r\n      \r\n      var progressMax = 16, didExtrasShuffle, array, arrays = [];\r\n      \r\n      function addArray(){\r\n        array = [];\r\n        for(i in heroMap)\r\n          array.push(heroMap[i]);\r\n        shuffle(array);\r\n        arrays.push(array);\r\n        didExtrasShuffle = false;\r\n      }\r\n      \r\n      addArray();\r\n      \r\n      for(var progressCounter=0; progressCounter<progressMax; progressCounter++){\r\n        if(options.progress)\r\n          options.progress(progressCounter, progressMax);\r\n          \r\n        swaps = 0;\r\n        \r\n        //do the swaps\r\n        for(i=0; i<forceExtras; i++)\r\n          for(j=(Math.floor(i/size)+1)*size; j<array.length; j++)\r\n            if(checkValueAndSwap(array, i, j))\r\n              break;\r\n    \r\n        //check if we are missing teams\r\n        var allFull = true;\r\n        for(i=0; i<forceExtras; i+=size)\r\n          if(getTeamValue(array, i) === 0)\r\n            allFull = false;\r\n    \r\n        //exit if we have nothing left to mess with\r\n        if(swaps === 0){\r\n        \r\n          //stuff at the end can be ignored, lets move to empty team\r\n          if(!didExtrasShuffle && !allFull){\r\n            var empty = -1;\r\n            for(i=0; i<forceExtras; i+=size)\r\n              if(getTeamValue(array, i) === 0)\r\n                empty = i;\r\n            if(empty !== -1){\r\n              var tmp;\r\n              for(i=0; i<size && forceExtras+i<array.length; i++){\r\n                tmp = array[empty+i];\r\n                array[empty+i] = array[forceExtras+i];\r\n                array[forceExtras+i] = tmp;\r\n              }\r\n              didExtrasShuffle = true;\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          //start new list\r\n          addArray();\r\n        }\r\n        \r\n      }\r\n      if(options.progress)\r\n        options.progress(progressMax, progressMax);\r\n        \r\n      //get the best array\r\n      var best = {};\r\n      for(i=0; i<arrays.length; i++){\r\n        var current = arrays[i], value = 0;\r\n        for(j=0; j<forceExtras; j+=size)\r\n          value += getTeamValue(current, j);\r\n        if(best.value === undefined || best.value < value){\r\n          best.value = value;\r\n          best.array = current;\r\n        }\r\n      }\r\n    \r\n      return postprocess(best.array, size, options.extras, function(array, i){ \r\n        return getTeamValue(array, i);\r\n      });\r\n    };\r\n    \r\n    function preprocess(champions, heroMap, synergyMap, typeWeights, levels){\r\n      for(i=2; i<=5; i++)\r\n        typeWeights[i] = CoC.settings.getDuplicateWeight(i);\r\n    \r\n      for(var i=0, fid, champion, synergies; i<champions.length; i++){\r\n        champion = champions[i];\r\n        fid = getHeroStarId(champion);\r\n        \r\n        //add hero\r\n        heroMap[fid]={\r\n          id:champion.get(\"uid\"),\r\n          fid:fid,\r\n          type:champion.get(\"typeId\"),\r\n          value:calculateChampionValue(champion, levels),\r\n          data:champion\r\n        };\r\n        synergyMap[fid] = {};\r\n        synergies = CoC.data.synergies.where({ fromId:champion.get(\"uid\"), fromStars:champion.get(\"stars\") });\r\n        for(var s=0;s < synergies.length; s++){\r\n          var synergy = synergies[s];          \r\n          var effect = synergy.effect();\r\n          synergyMap[fid][synergy.get(\"toId\")]={\r\n            value:CoC.settings.getWeight(synergy.get(\"effectId\")) * synergy.get(\"effectAmount\") / effect.get(\"base\")\r\n          };\r\n        }\r\n      }\r\n    }\r\n    \r\n    function postprocess(array, size, extras, getValue){\r\n      var result = { teams:[], extras:[] }, teams = [], i, j;\r\n      for(i=0; i<array.length; i+=size){\r\n        var value = getValue(array, i);\r\n        if(value > 0){\r\n          var team = [];\r\n          for(j=0; j<size; j++)\r\n            team.push(array[i+j].data);\r\n            \r\n          //sort so same teams don't shuffle around\r\n          team.sort(function(a,b){\r\n            return getHeroStarId(a).localeCompare(getHeroStarId(b));\r\n          });\r\n            \r\n          teams.push({ team:team, value:value });\r\n        }\r\n        else if(extras)\r\n          for(j=0; j<size && i+j<array.length; j++)\r\n            result.extras.push(array[i+j].data);\r\n      }\r\n      \r\n      //best teams will be first\r\n      teams.sort(function(a,b){ return b.value-a.value; });\r\n      for(i=0; i<teams.length; i++)\r\n        result.teams.push(teams[i].team);\r\n      \r\n      return result;\r\n    }\r\n\r\n    //getHeroStarId\r\n    function getHeroStarId(champion){\r\n      return [champion.get(\"uid\"), champion.get(\"stars\")].join('-');\r\n    }\r\n    \r\n    //getTeamId\r\n    function getTeamId(team){\r\n      var ids = [];\r\n      for(var i in team)\r\n        ids.push(team[i].fid);\r\n      ids.sort();\r\n      return ids.join('-');\r\n    }\r\n  };\r\n  \r\n  function calculateChampionValue(champion, levels){\r\n    if(levels === false)\r\n      return 1;\r\n    return champion.value();\r\n  }\r\n  \r\n  function factorial(n){\r\n    if(factorial.cache === undefined)\r\n      factorial.cache = { 0:1, 1:1, length:1 };\r\n    if(factorial.cache.length < n){\r\n      for(var i=factorial.cache.length; i <= n; i++)\r\n        factorial.cache[i] = i * factorial.cache[i - 1];\r\n      factorial.cache.length = n;\r\n    }\r\n    return factorial.cache[n];\r\n  }\r\n\r\n  function combination(n, r){\r\n    var value = n / factorial(r);\r\n    for(var i = n - 1; i > n - r; i--)\r\n      value *= i;\r\n    return value;\r\n  }\r\n\r\n  function shuffle(array){\r\n    var counter = array.length, temp, index;\r\n    while (counter > 0) {\r\n      index = Math.floor(Math.random() * counter);\r\n      counter--;\r\n      if(index != counter){\r\n        temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n      }\r\n    }\r\n  }\r\n  \r\n})();\r\n","onmessage = function (event){\r\n  var algorithm = event.data.algorithm,\r\n    rosterJSON = event.data.roster,\r\n    size = event.data.size,\r\n    levels = event.data.levels,\r\n    weights = event.data.weights,\r\n    quest = event.data.quest,\r\n    extras = event.data.extras,\r\n    update = event.data.update;\r\n  var i, j;\r\n  \r\n  if(!CoC.algorithm[algorithm]){\r\n    postMessage({ type:\"failed\", message:\"Algorithm not found\" });\r\n    return;\r\n  }\r\n  \r\n  //build mock settings with weights\r\n  CoC.settings = {};\r\n  CoC.settings.getWeight=function(key){\r\n    var value = weights[key];\r\n    if(value === undefined || value === null)\r\n      return 1;\r\n    return value;\r\n  };\r\n\r\n  CoC.settings.getDuplicateWeight=function(number){\r\n    if(CoC.settings.getDuplicateWeight.keys === undefined)\r\n      CoC.settings.getDuplicateWeight.keys = {\r\n        2:\"duplicates-2\",\r\n        3:\"duplicates-3\",\r\n        4:\"duplicates-4\",\r\n        5:\"duplicates-5\"\r\n      };\r\n    return CoC.settings.getWeight(CoC.settings.getDuplicateWeight.keys[number]);\r\n  };\r\n  \r\n  //Build progress function (update only every %update)\r\n  var lastTime = (new Date()).getTime(),\r\n    progress = function(current, max, description){\r\n      var time = (new Date()).getTime();\r\n      if(!description && time-lastTime < update)\r\n        return;\r\n      lastTime = time;\r\n      postMessage({ \r\n        type:\"progress\", \r\n        current:current, \r\n        max:max,\r\n        description:description        \r\n      });\r\n    };\r\n  \r\n  //Convert Champion JSON to models\r\n  var roster = [];\r\n  for(i=0; i<rosterJSON.length; i++)\r\n    roster.push(new CoC.model.Champion( rosterJSON[i] ));\r\n\r\n  //Get result from algorithm\r\n  var result = CoC.algorithm[algorithm].build({ \r\n    champions:roster, \r\n    size:size, \r\n    levels:levels,\r\n    extras:extras, \r\n    quest:quest, \r\n    progress:progress \r\n  });\r\n\r\n  //Convert Champion models to JSON\r\n  if(result.teams)\r\n    for(i=0; i<result.teams.length; i++)\r\n      for(j=0; j<result.teams[i].length; j++)\r\n        result.teams[i][j] = result.teams[i][j].toJSON();\r\n  if(result.extras)\r\n    for(i=0; i<result.extras.length; i++)\r\n      result.extras[i] = result.extras[i].toJSON();\r\n  \r\n  postMessage({ type:\"complete\", result:result });\r\n};\r\n"],"sourceRoot":"/source/"}