{"version":3,"sources":["scripts/lang/lang-en.js","scripts/lang/lang-ru.js","scripts/lang/lang.js","scripts/lib/underscore.js","scripts/lib/backbone.js","scripts/model/champion.js","scripts/model/effect.js","scripts/model/synergy.js","scripts/model/type.js","scripts/data/champions.js","scripts/data/effects.js","scripts/data/synergies.js","scripts/data/types.js","scripts/coc-algorithm.js","scripts/worker-teams.js"],"names":["CoC","lang","name","model","champion-blackbolt-name","champion-captainmarvel-name","champion-drax-name","champion-gamora-name","champion-msmarvel-name","champion-ronan-name","champion-spidermanblack-name","champion-superiorironman-name","champion-thor-name","champion-thorjanefoster-name","champion-venom-name","champion-ironman-name","champion-ironpatriot-name","champion-hulkbuster-name","champion-kang-name","champion-rocket-name","champion-starlord-name","champion-vision-name","champion-thevision-name","champion-ultron-name","champion-warmachine-name","champion-colossus-name","champion-cyclops-name","champion-deadpool-name","champion-deadpoolxforce-name","champion-magneto-name","champion-magnetomarvelnow-name","champion-storm-name","champion-wolverine-name","champion-blackpanther-name","champion-blackwidow-name","champion-daredevil-name","champion-daredevilnetflix-name","champion-elektra-name","champion-hawkeye-name","champion-moonknight-name","champion-punisher-name","champion-wintersoldier-name","champion-abomination-name","champion-antman-name","champion-captainamerica-name","champion-captainamericawwii-name","champion-electro-name","champion-hulk-name","champion-joefixit-name","champion-rhino-name","champion-spidergwen-name","champion-spiderman-name","champion-spidermanmorales-name","champion-yellowjacket-name","champion-drstrange-name","champion-ironfist-name","champion-juggernaut-name","champion-magik-name","champion-scarletwitch-name","champion-unstoppablecolossus-name","champion-captainmarvel-shortname","champion-spidermanblack-shortname","champion-superiorironman-shortname","champion-thorjanefoster-shortname","champion-rocket-shortname","champion-deadpoolxforce-shortname","champion-magnetomarvelnow-shortname","champion-captainamerica-shortname","champion-captainamericawwii-shortname","champion-spidermanmorales-shortname","champion-drstrange-shortname","champion-unstoppablecolossus-shortname","effect-attack-name","effect-stun-name","effect-critrate-name","effect-critdamage-name","effect-powergain-name","effect-powersteal-name","effect-perfectblock-name","effect-block-name","effect-armor-name","effect-health-name","effect-healthsteal-name","effect-attack-description","effect-stun-description","effect-critrate-description","effect-critdamage-description","effect-powergain-description","effect-powersteal-description","effect-perfectblock-description","effect-block-description","effect-armor-description","effect-health-description","effect-healthsteal-description","type-cosmic-name","type-tech-name","type-mutant-name","type-skill-name","type-science-name","type-mystic-name","crystal-versus-name","crystal-arena-name","crystal-alliance-name","crystal-daily-name","crystal-2star-name","crystal-premium-name","crystal-3star-name","crystal-4star-name","crystal-versus-description","crystal-arena-description","crystal-alliance-description","crystal-daily-description","crystal-premium-description","crystal-3star-description","crystal-4star-description","algorithm-greedy-name","algorithm-shuffle-name","algorithm-greedy-description","algorithm-shuffle-description","string","of","with","found","extras","team","teams","guide","guides","champion","champions","synergy","synergies","crystal","crystals","roster","manage","add-champion","import-csv","export-csv","delete-all","sort","filter","stars","type","rank","level","awakened","quest","view-guide","delete","cancel","ask-delete","ask-delete-all","cannot-undo","advanced-settings","team-size","algorithm","arena","build","add-all","reset-defaults","champion-weights","synergy-weights","duplicate-weights","choose-preset","use-levels","double","triple","quadruple","quintuple","choose-guide","share-to","facebook","twitter","google","tools","language","synergy-map","roster-manager","onboarding-synergies","onboarding-roster","onboarding-teams","coming-soon","gameplay","special","signature","heavy-attack","abilities","grade","strategy","damage-type","range","note","synergies-external","none","champion-blackbolt-shortname","champion-drax-shortname","champion-gamora-shortname","champion-msmarvel-shortname","champion-ronan-shortname","champion-thor-shortname","champion-venom-shortname","champion-ironman-shortname","champion-ironpatriot-shortname","champion-hulkbuster-shortname","champion-kang-shortname","champion-starlord-shortname","champion-vision-shortname","champion-thevision-shortname","champion-ultron-shortname","champion-warmachine-shortname","champion-colossus-shortname","champion-cyclops-shortname","champion-deadpool-shortname","champion-magneto-shortname","champion-storm-shortname","champion-wolverine-shortname","champion-blackpanther-shortname","champion-blackwidow-shortname","champion-daredevil-shortname","champion-daredevilnetflix-shortname","champion-elektra-shortname","champion-hawkeye-shortname","champion-moonknight-shortname","champion-punisher-shortname","champion-wintersoldier-shortname","champion-abomination-shortname","champion-antman-shortname","champion-captaishortnamerica-shortname","champion-captaishortnamericawwii-shortname","champion-electro-shortname","champion-hulk-shortname","champion-joefixit-shortname","champion-rhino-shortname","champion-spidergwen-shortname","champion-spiderman-shortname","champion-yellowjacket-shortname","champion-ironfist-shortname","champion-juggernaut-shortname","champion-magik-shortname","champion-scarletwitch-shortname","quest-group","defaultLang","currentLang","query","location","search","substr","split","map","str","attr","unescape","console","warn","key","noDefault","value","undefined","createReduce","dir","iterator","obj","iteratee","memo","keys","index","length","currentKey","context","optimizeCb","isArrayLike","_","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","i","Math","max","min","slice","call","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","push","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","exports","module","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","n","sortBy","criteria","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","test","replace","escape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","e","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd","factory","global","$","Backbone","require","jQuery","Zepto","ender","previousBackbone","emulateHTTP","emulateJSON","addMethod","attribute","defaultVal","unshift","addUnderscoreMethods","Class","_isModel","modelMatcher","get","attributes","Events","eventSplitter","eventsApi","events","callback","opts","on","internalOn","listening","_events","onApi","ctx","listeners","_listeners","listenTo","_listenId","listeningTo","_listeningTo","thisId","objId","count","handlers","off","offApi","stopListening","ids","handler","_callback","onceMap","listenToOnce","offer","trigger","triggerApi","objEvents","allEvents","triggerEvents","ev","a1","a2","a3","unbind","Model","cid","cidPrefix","parse","changed","initialize","validationError","idAttribute","sync","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","isNew","patch","xhr","destroy","url","base","urlError","encodeURIComponent","isValid","error","modelMethods","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","insert","at","singular","removed","_removeModels","toAdd","toRemove","modelMap","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","_removeReference","previousModels","shift","modelId","_byId","callbackOpts","_onModelEvent","event","prevId","collectionMethods","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","delegate","eventName","listener","undelegate","_createElement","document","createElement","_setAttributes","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","exec","param","decodeURIComponent","History","checkUrl","window","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","removeEventListener","detachEvent","removeChild","clearInterval","title","_updateHash","protoProps","staticProps","child","parent","Surrogate","__super__","championStarRankLevels",1,"levels",2,"ranks",3,4,5,"Champion","uid","shortname","typeId","gradeAwakened","_stars","fid","_fid","portrait","_portrait","image","_image","_type","types","_crystals","ccs","crystalChampions","championId","championStars","parseInt","Effect","amount","altimage","description","imageOff","championIds","_championIds","Synergy","fromId","fromStars","toId","effectId","effectAmount","to","_to","from","_from","effect","_effect","effects","Type","calculateChampionValue","factorial","combination","r","temp","counter","preProcess","typeWeights","useLevels","getDuplicateWeight","getWeight","postProcess","o","getTopPartner","depth","progress","getNextPartner","addPartnerHero","getTypes","next","compareTeams","getTeamValue","addPartnerSynergies","addPartnerType","hero","oldSynergies","vsynergies","vchampions","vtypes","getSynergyCulledTeam","s","cull","culled","t","preselect","team_index","needed","preprocess","heroMap","synergyMap","getHeroStarId","postprocess","getValue","localeCompare","getTeamId","checkValueAndSwap","v1a","v1b","v2a","v2b","count1","count2","tmp","swaps","swap","forceExtras","tid","teamValues","hvalue","svalue","cvalue","addArray","arrays","didExtrasShuffle","maxTeams","progressMax","progressCounter","allFull","empty","best","onmessage","rosterJSON","weights","postMessage","message","number","lastTime","time"],"mappings":"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","file":"worker-teams.js","sourcesContent":["var CoC = CoC || {};\r\nCoC.lang = CoC.lang || {};\r\n\r\nCoC.lang['en'] = {\r\n  name:'English',\r\n  model:{\r\n\r\n    //Champion name\r\n    'champion-blackbolt-name': 'Black Bolt',\r\n    'champion-captainmarvel-name': 'Captain Marvel',\r\n    'champion-drax-name': 'Drax',\r\n    'champion-gamora-name': 'Gamora',\r\n    'champion-msmarvel-name': 'Ms. Marvel',\r\n    'champion-ronan-name': 'Ronan',\r\n    'champion-spidermanblack-name': 'Spider-Man Symbiote',\r\n    'champion-superiorironman-name': 'Superior Iron Man',\r\n    'champion-thor-name': 'Thor',\r\n    'champion-thorjanefoster-name': 'Thor Jane Foster',\r\n    'champion-venom-name': 'Venom',\r\n    'champion-ironman-name': 'Iron Man',\r\n    'champion-ironpatriot-name': 'Iron Patriot',\r\n    'champion-hulkbuster-name': 'Hulkbuster',\r\n    'champion-kang-name': 'Kang',\r\n    'champion-rocket-name': 'Rocket Raccoon',\r\n    'champion-starlord-name': 'Star-Lord',\r\n    'champion-vision-name': 'Vision',\r\n    'champion-thevision-name': 'The Vision',\r\n    'champion-ultron-name': 'Ultron',\r\n    'champion-warmachine-name': 'War Machine',\r\n    'champion-colossus-name': 'Colossus',\r\n    'champion-cyclops-name': 'Cyclops',\r\n    'champion-deadpool-name': 'Deadpool',\r\n    'champion-deadpoolxforce-name': 'Deadpool X-Force',\r\n    'champion-magneto-name': 'Magneto',\r\n    'champion-magnetomarvelnow-name': 'Magneto Marvel Now',\r\n    'champion-storm-name': 'Storm',\r\n    'champion-wolverine-name': 'Wolverine',\r\n    'champion-blackpanther-name': 'Black Panther',\r\n    'champion-blackwidow-name': 'Black Widow',\r\n    'champion-daredevil-name': 'Daredevil',\r\n    'champion-daredevilnetflix-name': 'Daredevil',\r\n    'champion-elektra-name': 'Elektra',\r\n    'champion-hawkeye-name': 'Hawkeye',\r\n    'champion-moonknight-name': 'Moon Knight',\r\n    'champion-punisher-name': 'Punisher',\r\n    'champion-wintersoldier-name': 'Winter Soldier',\r\n    'champion-abomination-name': 'Abomination',\r\n    'champion-antman-name': 'Ant-Man',\r\n    'champion-captainamerica-name': 'Captain America',\r\n    'champion-captainamericawwii-name': 'Captain America WWII',\r\n    'champion-electro-name': 'Electro',\r\n    'champion-hulk-name': 'Hulk',\r\n    'champion-joefixit-name': 'Joe Fixit',\r\n    'champion-rhino-name': 'Rhino',\r\n    'champion-spidergwen-name': 'Spider-Gwen',\r\n    'champion-spiderman-name': 'Spider-Man',\r\n    'champion-spidermanmorales-name': 'Spider-Man Morales',\r\n    'champion-yellowjacket-name': 'YellowJacket',\r\n    'champion-drstrange-name': 'Doctor Strange',\r\n    'champion-ironfist-name': 'Iron Fist',\r\n    'champion-juggernaut-name': 'Juggernaut',\r\n    'champion-magik-name': 'Magik',\r\n    'champion-scarletwitch-name': 'Scarlet Witch',\r\n    'champion-unstoppablecolossus-name': 'Unstoppable Colossus',\r\n\r\n    //Champion shortname\r\n    'champion-captainmarvel-shortname': 'Cap. Marvel',\r\n    'champion-spidermanblack-shortname': 'Spider-Man',\r\n    'champion-superiorironman-shortname': 'Sup. Iron Man',\r\n    'champion-thorjanefoster-shortname': 'Thor',\r\n    'champion-rocket-shortname': 'Rocket',\r\n    'champion-deadpoolxforce-shortname': 'Deadpool',\r\n    'champion-magnetomarvelnow-shortname': 'Magneto',\r\n    'champion-captainamerica-shortname': 'Cap. America',\r\n    'champion-captainamericawwii-shortname': 'Cap. America',\r\n    'champion-spidermanmorales-shortname': 'Spider-Man',\r\n    'champion-drstrange-shortname': 'Dr. Strange',\r\n    'champion-unstoppablecolossus-shortname': 'Unst. Colossus',\r\n\r\n    //Effect name\r\n    'effect-attack-name': 'Attack',\r\n    'effect-stun-name': 'Stun',\r\n    'effect-critrate-name': 'Critical Rate',\r\n    'effect-critdamage-name': 'Critical Damage',\r\n    'effect-powergain-name': 'Power Gain',\r\n    'effect-powersteal-name': 'Power Steal',\r\n    'effect-perfectblock-name': 'Perfect Block',\r\n    'effect-block-name': 'Block Proficiency',\r\n    'effect-armor-name': 'Armor',\r\n    'effect-health-name': 'Health',\r\n    'effect-healthsteal-name': 'Health Steal',\r\n\r\n    //Effect description\r\n    'effect-attack-description': 'Increases damage on all attacks.',\r\n    'effect-stun-description': 'Chance to Stun on special attacks.',\r\n    'effect-critrate-description': 'Increases the chance for Critical hit.',\r\n    'effect-critdamage-description': 'Increases damage multiplier for Critical hits.',\r\n    'effect-powergain-description': 'Gain additional Power (used to trigger a special) whenever Power is gained.',\r\n    'effect-powersteal-description': 'Gain Power (used to trigger a special) when attacking.',\r\n    'effect-perfectblock-description': 'Increased chance to Perfect Block for 0 damage.',\r\n    'effect-block-description': 'Increases Block effectiveness for less damage taken.',\r\n    'effect-armor-description': 'Increases Armor so that all damage taken is decreased.',\r\n    'effect-health-description': 'Increases champion Health.',\r\n    'effect-healthsteal-description': 'Gain Health when attacking.',\r\n\r\n    //Type name\r\n    'type-cosmic-name': 'Cosmic',\r\n    'type-tech-name': 'Tech',\r\n    'type-mutant-name': 'Mutant',\r\n    'type-skill-name': 'Skill',\r\n    'type-science-name': 'Science',\r\n    'type-mystic-name': 'Mystic',\r\n\r\n    //Crystal name\r\n    'crystal-versus-name': 'Versus',\r\n    'crystal-arena-name': 'Arena',\r\n    'crystal-alliance-name': 'Alliance',\r\n    'crystal-daily-name': 'Daily',\r\n    'crystal-2star-name': '2-Star',\r\n    'crystal-premium-name': 'Premium',\r\n    'crystal-3star-name': '3-Star',\r\n    'crystal-4star-name': '4-Star',\r\n\r\n    //Crystal description (keep $CURRENCY$ tokens for image replacement)\r\n    'crystal-versus-description': 'Acquired when you win a versus match.',\r\n    'crystal-arena-description': 'Buy for 2000 $BATTLECHIPS$.',\r\n    'crystal-alliance-description': 'Buy for 1000 $LOYALTY$.',\r\n    'crystal-daily-description': 'Acquired once every 24 hours.',\r\n    'crystal-premium-description': 'Buy for 100 $UNITS$.',\r\n    'crystal-3star-description': 'Buy for 400 $UNITS$, rare event.',\r\n    'crystal-4star-description': 'Buy for 2500 $UNITS$, very rare event.',\r\n\r\n    //Algorithm name\r\n    'algorithm-greedy-name': 'Greedy',\r\n    'algorithm-shuffle-name': 'Shuffle',\r\n\r\n    //Algorithm description\r\n    'algorithm-greedy-description': 'SLOW. This picks the best team mathematically given all parameters.',\r\n    'algorithm-shuffle-description': 'FAST. This chooses the best combinations of teams possible.',\r\n\r\n  },\r\n  string: {\r\n    //Listing words\r\n    'of': 'of',\r\n    'with': 'with',\r\n    'found': 'Found',\r\n    'extras': 'Extras',\r\n\r\n    //Common words/sections\r\n    'team': 'Team',\r\n    'teams': 'Teams',\r\n\r\n    'guide': 'Guide',\r\n    'guides': 'Guides',\r\n\r\n    'champion': 'Champion',\r\n    'champions': 'Champions',\r\n\r\n    'synergy': 'Synergy',\r\n    'synergies': 'Synergies',\r\n\r\n    'crystal': 'Crystal',\r\n    'crystals': 'Crystals',\r\n\r\n    'roster': 'Roster',\r\n\r\n    //Roster Panel\r\n    'manage': 'Manage',\r\n    'add-champion': 'Add a Champion',\r\n    'import-csv': 'Import .csv',\r\n    'export-csv': 'Export .csv',\r\n    'delete-all': 'Delete All',\r\n\r\n    'sort': 'Sort',\r\n    'filter': 'Filter',\r\n\r\n    //Roster Config\r\n    'stars': 'Stars',\r\n    'type': 'Type',\r\n    'name': 'Name',\r\n\r\n    'rank': 'Rank',\r\n    'level': 'Level',\r\n    'awakened': 'Awakened',\r\n    'quest': 'Quest',\r\n    'view-guide': 'View Guide',\r\n\r\n    'delete': 'Delete',\r\n    'cancel': 'Cancel',\r\n\r\n    'ask-delete': 'Are you sure you want to delete',\r\n    'ask-delete-all': 'Are you sure you want to delete all of your champions?',\r\n    'cannot-undo': 'This action cannot be undone.',\r\n\r\n    //Team Panel\r\n    'advanced-settings': 'Advanced Settings',\r\n    'team-size': 'Team Size',\r\n    'algorithm': 'Algorithm',\r\n    'arena': 'Arena',\r\n    'build': 'Build',\r\n\r\n    //Add Champion Page\r\n    'add-all': 'Add All',\r\n\r\n    //Advanced Settings Page\r\n    'reset-defaults': 'Reset to Defaults',\r\n    'champion-weights': 'Champion Weights',\r\n    'synergy-weights': 'Synergy Weights',\r\n    'duplicate-weights': 'Duplicate Class Weights',\r\n    'choose-preset': 'Choose a preset...',\r\n    'use-levels': 'Calculate using stars / ranks / levels',\r\n\r\n    //Tuples\r\n    'double': 'Double',\r\n    'triple': 'Triple',\r\n    'quadruple': 'Quadruple',\r\n    'quintuple': 'Quintuple',\r\n\r\n    //Guide Page\r\n    'choose-guide': 'Choose a guide',\r\n\r\n    //Sharing\r\n    'share-to': 'Share to',\r\n    'facebook': 'Facebook',\r\n    'twitter': 'Twitter',\r\n    'google': 'Google',\r\n    'tools': 'Tools',\r\n    'language': 'Language',\r\n    'synergy-map': 'Synergy Map',    \r\n    'roster-manager': 'Roster Manager',  \r\n\r\n    //Onboarding Messages\r\n    'onboarding-synergies': 'Use the roster manager tool to add more champions to your roster.',\r\n    'onboarding-roster': 'Use the options menu to add new champions',\r\n    'onboarding-teams': 'Use the Build menu create your teams!',\r\n\r\n    //Guide\r\n    'coming-soon': 'Coming Soon...',\r\n    'gameplay': 'Gameplay',\r\n    'special': 'Special',\r\n    'signature': 'Signature Ability',\r\n    'heavy-attack': 'Heavy Attack',\r\n    'abilities': 'Abilities',\r\n\r\n    'grade': 'Grade',\r\n    'strategy': 'Strategy',\r\n\r\n    'damage-type': 'Damage Type',\r\n    'range': 'Range',\r\n    'note': 'Note',\r\n\r\n    'synergies-external': 'External Synergies',\r\n\r\n    'none': 'None',\r\n  }\r\n};\r\n","var CoC = CoC || {};\nCoC.lang = CoC.lang || {};\n\nCoC.lang['ru'] = {\n  name:'Русский',\n  model: { \n  \n    //Champion name \n    'champion-blackbolt-name': 'Черный Гром',\n    'champion-captainmarvel-name': 'Капитан Марвел',\n    'champion-drax-name': 'Дракс',\n    'champion-gamora-name': 'Гамора',\n    'champion-msmarvel-name': 'Мисс Марвел',\n    'champion-ronan-name': 'Ронан',\n    'champion-spidermanblack-name': 'Черный Человек-Паук',\n    'champion-superiorironman-name': 'Высший Железный Человек',\n    'champion-thor-name': 'Тор',\n    'champion-thorjanefoster-name': 'Джейн Фостер',\n    'champion-venom-name': 'Веном',\n    'champion-ironman-name': 'Железный Человек',\n    'champion-ironpatriot-name': 'Железный Патриот',\n    'champion-hulkbuster-name': 'Халкбастер',\n    'champion-kang-name': 'Канг',\n    'champion-rocket-name': 'Реактивный Енот',\n    'champion-starlord-name': 'Звездный Лорд',\n    'champion-vision-name': 'Вижн',\n    'champion-thevision-name': 'Вижн Кино',\n    'champion-ultron-name': 'Альтрон Прайм',\n    'champion-warmachine-name': 'Воитель',\n    'champion-colossus-name': 'Колосс',\n    'champion-cyclops-name': 'Циклоп',\n    'champion-deadpool-name': 'Дедпул',\n    'champion-deadpoolxforce-name': 'Дедпул X-Force',\n    'champion-magneto-name': 'Магнето',\n    'champion-magnetomarvelnow-name': 'Белый Магнето',\n    'champion-storm-name': 'Шторм',\n    'champion-wolverine-name': 'Росомаха',\n    'champion-blackpanther-name': 'Черная Пантера',\n    'champion-blackwidow-name': 'Черная Вдова',\n    'champion-daredevil-name': 'Сорвиголова',\n    'champion-daredevilnetflix-name': 'Сорвиголова Netflix',\n    'champion-elektra-name': 'Электра',\n    'champion-hawkeye-name': 'Соколиный Глаз',\n    'champion-moonknight-name': 'Лунный Рыцарь',\n    'champion-punisher-name': 'Каратель',\n    'champion-wintersoldier-name': 'Зимний Солдат',\n    'champion-abomination-name': 'Мерзость',\n    'champion-antman-name': 'Человек Муравей',\n    'champion-captainamerica-name': 'Капитан Америка',\n    'champion-captainamericawwii-name': 'Капитан Америка WWII',\n    'champion-electro-name': 'Электро',\n    'champion-hulk-name': 'Халк',\n    'champion-joefixit-name': 'Джо Фиксит',\n    'champion-rhino-name': 'Носорог',\n    'champion-spidergwen-name': 'Спайдер Гвен',\n    'champion-spiderman-name': 'Человек-Паук',\n    'champion-spidermanmorales-name': 'Человек-Паук Моралес',\n    'champion-yellowjacket-name': 'Желтый Шершень',\n    'champion-drstrange-name': 'Доктор Стрэндж',\n    'champion-ironfist-name': 'Железный Кулак',\n    'champion-juggernaut-name': 'Джаггернаут',\n    'champion-magik-name': 'Мэджик',\n    'champion-scarletwitch-name': 'Алая Ведьма',\n    'champion-unstoppablecolossus-name': 'Неудержимый Колосс',\n    \n    //Champion shortnames\n    'champion-blackbolt-shortname': 'Гром',\n    'champion-captainmarvel-shortname': 'Кэп Марвел',\n    'champion-drax-shortname': 'Дракс',\n    'champion-gamora-shortname': 'Гамора',\n    'champion-msmarvel-shortname': 'Мисс',\n    'champion-ronan-shortname': 'Ронан',\n    'champion-spidermanblack-shortname': 'Черный Паук',\n    'champion-superiorironman-shortname': 'СЖЧ',\n    'champion-thor-shortname': 'Тор',\n    'champion-thorjanefoster-shortname': 'Джейн Фостер',\n    'champion-venom-shortname': 'Веном',\n    'champion-ironman-shortname': 'ЖЧ',\n    'champion-ironpatriot-shortname': 'ЖП',\n    'champion-hulkbuster-shortname': 'ХБ',\n    'champion-kang-shortname': 'Канг',\n    'champion-rocket-shortname': 'Енот',\n    'champion-starlord-shortname': 'Лорд',\n    'champion-vision-shortname': 'Вижн',\n    'champion-thevision-shortname': 'Вижн Кино',\n    'champion-ultron-shortname': 'Альтрон',\n    'champion-warmachine-shortname': 'Воитель',\n    'champion-colossus-shortname': 'Колосс',\n    'champion-cyclops-shortname': 'Циклоп',\n    'champion-deadpool-shortname': 'Дед',\n    'champion-deadpoolxforce-shortname': 'Дед седой',\n    'champion-magneto-shortname': 'Магнит',\n    'champion-magnetomarvelnow-shortname': 'Белый Магнит',\n    'champion-storm-shortname': 'Шторм',\n    'champion-wolverine-shortname': 'Рося',\n    'champion-blackpanther-shortname': 'Пантера',\n    'champion-blackwidow-shortname': 'Вдова',\n    'champion-daredevil-shortname': 'Сорвиголова',\n    'champion-daredevilnetflix-shortname': 'Сорвиголова Netflix',\n    'champion-elektra-shortname': 'Электра',\n    'champion-hawkeye-shortname': 'Сокол',\n    'champion-moonknight-shortname': 'Лунатик',\n    'champion-punisher-shortname': 'Кара',\n    'champion-wintersoldier-shortname': 'Зимний',\n    'champion-abomination-shortname': 'Мерзость',\n    'champion-antman-shortname': 'Муравей',\n    'champion-captaishortnamerica-shortname': 'Кэп',\n    'champion-captaishortnamericawwii-shortname': 'Кэп ВМВ',\n    'champion-electro-shortname': 'Электрик',\n    'champion-hulk-shortname': 'Халк',\n    'champion-joefixit-shortname': 'Фиксит',\n    'champion-rhino-shortname': 'Носорог',\n    'champion-spidergwen-shortname': 'Гвен',\n    'champion-spiderman-shortname': 'Паук',\n    'champion-spidermanmorales-shortname': 'Моралес',\n    'champion-yellowjacket-shortname': 'Шершень',\n    'champion-drstrange-shortname': 'Док',\n    'champion-ironfist-shortname': 'Кулак',\n    'champion-juggernaut-shortname': 'Джаг',\n    'champion-magik-shortname': 'Мэджик',\n    'champion-scarletwitch-shortname': 'Ведьма',\n    'champion-unstoppablecolossus-shortname': 'Неуд',\n    \n    //Effect name \n    'effect-attack-name': 'Атака',\n    'effect-stun-name': 'Оглушение',\n    'effect-critrate-name': 'Вероятность крит. урона',\n    'effect-critdamage-name': 'Крит. Урон',\n    'effect-powergain-name': 'Увеличение Энергии',\n    'effect-powersteal-name': 'Кража Энергии',\n    'effect-perfectblock-name': 'Идеальный Блок',\n    'effect-block-name': 'Вероятность ид. блока',\n    'effect-armor-name': 'Броня',\n    'effect-health-name': 'Здоровье',\n    'effect-healthsteal-name': 'Кража здоровья',\n    \n    //Effect description \n    'effect-attack-description': 'Увеличение урона на все атаки.',\n    'effect-stun-description': 'Шанс оглушения при спец. атаках.',\n    'effect-critrate-description': 'Увеличение вероятности крит. урона.',\n    'effect-critdamage-description': 'Увеличение критического урона.',\n    'effect-powergain-description': 'Увеличечние энергии (от спец. атак) независимо от атаки.',\n    'effect-powersteal-description': 'Кража энергии (от спец. атак) за счет атаки.',\n    'effect-perfectblock-description': 'Увеличение шанса идеального блока - 0 урона в блоке.',\n    'effect-block-description': 'Увеличение эффективности блокирования - уменьшение урона в блоке.',\n    'effect-armor-description': 'Увеличение брони, тем самым уменьшая получаемый урон.',\n    'effect-health-description': 'Увеличение здоровья чемпиона.',\n    'effect-healthsteal-description': 'Восполнение здоровья при атаке.',\n    \n    //Type name \n    'type-cosmic-name': 'Космос',\n    'type-tech-name': 'Технологии',\n    'type-mutant-name': 'Мутации',\n    'type-skill-name': 'Способности',\n    'type-science-name': 'Наука',\n    'type-mystic-name': 'Мистика',\n    \n    //Crystal name \n    'crystal-versus-name': 'Кристалл за битвы',\n    'crystal-arena-name': 'Кристалл Арены',\n    'crystal-alliance-name': 'Кристалл союза',\n    'crystal-daily-name': 'Ежедневный кристалл',\n    'crystal-2star-name': 'Кристалл героя с 2-мя звездами',\n    'crystal-premium-name': 'Усиленный кристалл героя',\n    'crystal-3star-name': 'Кристалл героя с 3-мя звездами',\n    'crystal-4star-name': 'Кристалл героя с 4-мя звездами',\n    \n    //Crystal description (keep $CURRENCY$ tokens for image replacement) \n    'crystal-versus-description': 'Даётся за победу на арене 1vs1.',\n    'crystal-arena-description': 'Покупается за 2000 $BATTLECHIPS$.',\n    'crystal-alliance-description': 'Покупается за 1000 $LOYALTY$.',\n    'crystal-daily-description': 'Появляется каждые 24 часа.',\n    'crystal-premium-description': 'Покупается за 100 $UNITS$.',\n    'crystal-3star-description': 'Покупается за 400 $UNITS$, редкая акция.',\n    'crystal-4star-description': 'Покупается за 2500 $UNITS$, очень редкая акция.',\n\n    //Algorithm name\n    'algorithm-greedy-name': 'Greedy',\n    'algorithm-shuffle-name': 'Смешанный',\n\n    //Algorithm description\n    'algorithm-greedy-description': 'МЕДЛЕННЫЙ. Выбирает команды, используя математический просчет на основе введенных апраметров.',\n    'algorithm-shuffle-description': 'БЫСТРЫЙ. Выбирает лучшую возможную комбинацию команды.',\n  },\n  string: { \n  \n      //Listing words \n    'of': 'из',\n    'with': 'с',\n    'found': 'Найден',\n    'extras': 'Экстра',\n    \n    //Common words/sections \n    'team': 'Команда',\n    'teams': 'Команды',\n    'guide': 'Руководство',\n    'guides': 'Руководства',\n    'champion': 'Чемпион',\n    'champions': 'Чемпионы',\n    'synergy': 'Синергия',\n    'synergies': 'Синергии',\n    'crystal': 'Кристалл',\n    'crystals': 'Кристаллы',\n    'roster': 'Список',\n    \n    //Roster Panel \n    'manage': 'Управление',\n    'add-champion': 'Добавить чемпиона',\n    'import-csv': 'Импорт .csv',\n    'export-csv': 'Экспорт .csv',\n    'delete-all': 'Удалить всех',\n    'sort': 'Сортировать',\n    'filter': 'Фильтр',\n    \n    //Roster Config \n    'stars': 'Каегория',\n    'type': 'Класс',\n    'name': 'Имя',\n    \n    'rank': 'Ранг',\n    'level': 'Уровень',\n    'awakened': 'Дубль',\n    'quest': 'Задание',\n    'view-guide': 'Посмотреть руководство',\n    \n    'delete': 'Удалить',\n    'cancel': 'Отмена',\n    \n    'ask-delete': 'Вы уверены, что хотите удалить?',\n    'ask-delete-all': 'Вы уверены, что хотите удалить всех чемпионов?',\n    'cannot-undo': 'Это действие не может быть отменено.',\n    \n    //Team Panel \n    'advanced-settings': 'Дополнительные настройки',\n    'team-size': 'Размер команды',\n    'algorithm': 'Алгоритм',\n    'quest-group': 'Группа задания',\n    'build': 'Построить',\n    \n    //Add Champion Page\n    'add-all': 'Добавить всех',\n   \n    //Advanced Settings Page\n    'reset-defaults': 'Восстановить стандартные настройки',\n    'champion-weights':'Уровни чемпионов',\n    'synergy-weights': 'Уровни синергии',\n    'duplicate-weights': 'Уровни дублей',\n    'choose-preset': 'Выберите предустановку...',\n    'use-levels': 'Просчитать используя звезды / ранги / уровни',\n    \n    //Tuples \n    'double': 'Двойной',\n    'triple': 'Тройной',\n    'quadruple': 'Четверной',\n    'quintuple': 'Пятерной',\n    \n    //Guide Page \n    'choose-guide': 'Выберите руководство',\n    \n    //Sharing \n    'share-to': 'Поделиться',\n    'facebook': 'Facebook',\n    'twitter': 'Twitter',\n    'google': 'Google',\n    'language': 'Язык',\n    'tools': 'Опции',\n    'synergy-map': 'Карта синергии',\n    'roster-manager': 'Манеджер списка',\n    \n    //Onboarding Messages \n    'onboarding-synergies': 'Используейте меню настройки списка, чтобы добавить еще чемпионов.',\n    'onboarding-roster': 'Откройте настройки, чтобы добавить нового чемпиона',\n    'onboarding-teams': 'Используйте меню строителя, чтобы создать свою команду!',\n    \n    //Guide \n    'coming-soon': 'Скоро обновление...',\n    'gameplay': 'Геймплей',\n    'special': 'Специальные атаки',\n    'signature': 'Коронная способность',\n    'heavy-attack': 'Тяжелая атака',\n    'abilities': 'Способности',\n    \n    'grade': 'Оценка',\n    'strategy': 'Стратегия',\n    \n    'damage-type': 'Тип урона',\n    'range': 'Дальний',\n    'note': 'Заметка',\n    \n    'synergies-external': 'Синергия от других чемпионов',\n    \n    'none': 'Отсутствует',\n  }\n};\n","var CoC = CoC || {};\r\nCoC.lang = CoC.lang || {};\r\n\r\n(function(){\r\n  var defaultLang = 'en';\r\n  var currentLang = 'en';\r\n\r\n  var query = {};\r\n  location.search.substr(1).split('&').map(function(str){\r\n    var attr = str.split('=');\r\n    query[attr[0]] = attr[1] && unescape(attr[1]);\r\n  });\r\n  if(query['lang']){\r\n    currentLang = query['lang'];\r\n    console.warn('Language set to \"' + currentLang + '\"');\r\n  }\r\n\r\n  CoC.lang.model = function(key, noDefault){\r\n    var value = CoC.lang[currentLang].model[key];\r\n    if(value === undefined && noDefault === undefined)\r\n      value = CoC.lang[defaultLang].model[key];\r\n    return value;\r\n  };\r\n\r\n  CoC.lang.string = function(key){\r\n    var value = CoC.lang[currentLang].string[key];\r\n    if(value === undefined)\r\n      value = CoC.lang[defaultLang].string[key];\r\n    return value;\r\n  };\r\n\r\n  CoC.lang.search = (defaultLang === currentLang)? '': '?lang='+currentLang;\r\n\r\n})();\r\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","//     Backbone.js 1.2.3\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    for (var i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model;\n      for (var i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length != set.length || _.some(this.models, function(model, index) {\n          return model !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\n\r\n(function(){\r\n\r\n  //championStarRankValue[stars][rank]\r\n  var championStarRankLevels={\r\n    1:{\r\n      1:{ levels: 10, min:100, max:175 }, \r\n      2:{ levels: 20, min:175, max:250 },\r\n      ranks: 2\r\n    },\r\n    2:{\r\n      1:{ levels: 10, min:150, max:250 }, \r\n      2:{ levels: 20, min:250, max:400 }, \r\n      3:{ levels: 30, min:400, max:600 },\r\n      ranks: 3\r\n    },\r\n    3:{\r\n      1:{ levels: 10, min:300, max:500 }, \r\n      2:{ levels: 20, min:500, max:900 }, \r\n      3:{ levels: 30, min:900, max:1200 }, \r\n      4:{ levels: 40, min:1200, max:1500 },\r\n      ranks: 4\r\n    },\r\n    4:{\r\n      1:{ levels: 10, min:600, max:1000 }, \r\n      2:{ levels: 20, min:1000, max:1500 }, \r\n      3:{ levels: 30, min:1500, max:2000 }, \r\n      4:{ levels: 40, min:2000, max:2800 }, \r\n      5:{ levels: 50, min:2800, max:3500 },\r\n      ranks: 5\r\n    }\r\n    //TODO: 5-star values\r\n  };\r\n\r\n  CoC.model.Champion = Backbone.Model.extend({\r\n    defaults: {\r\n      uid: \"champion\",\r\n      stars:2,\r\n      name: 'Champion',\r\n      shortname: null,\r\n      typeId: \"mutant\",\r\n      awakened: 0,\r\n      rank: 1,\r\n      level: 1,\r\n      grade: 0,\r\n      gradeAwakened: 0,\r\n      quest: false\r\n    },\r\n\r\n    constructor: function() {\r\n      Backbone.Model.apply(this, arguments);\r\n      var uid = this.get('uid');\r\n      var name = CoC.lang.model('champion-'+uid+'-name');\r\n      var shortname = CoC.lang.model('champion-'+uid+'-shortname', true);\r\n      if(name)\r\n        this.set('name', name);\r\n      if(shortname)\r\n        this.set('shortname', shortname);\r\n    },\r\n\r\n    value:function(){\r\n      var stars = this.get(\"stars\"), \r\n        rank = this.get(\"rank\"), \r\n        level = this.get(\"level\"), \r\n        awakened = this.get(\"awakened\");\r\n      if(level < 1 || championStarRankLevels[stars] === undefined)\r\n        return 0;\r\n      var range = championStarRankLevels[stars][rank];\r\n      if(range === undefined || level > range.levels )\r\n        return 0;\r\n      var value = range.min + (level / range.levels) * (range.max - range.min);\r\n      if(awakened > 0)\r\n        value *= 1.05 + Math.min(Math.max(1, awakened), 99) * 0.005;\r\n      return value;\r\n    },\r\n    \r\n    ranks:function(){\r\n      var stars = championStarRankLevels[this.get(\"stars\")];\r\n      if(stars === undefined)\r\n        return null;\r\n      return stars.ranks;\r\n    },\r\n    \r\n    levels:function(){\r\n      var stars = championStarRankLevels[this.get(\"stars\")];\r\n      if(stars === undefined)\r\n        return null;\r\n      var rank = stars[this.get(\"rank\")];\r\n      if(rank === undefined)\r\n        return null;\r\n      return rank.levels;\r\n    },\r\n    \r\n    stars:function(){\r\n      if(this._stars === undefined){\r\n        this._stars = [\"\", \"★\", \"★★\", \"★★★\", \"★★★★\", \"★★★★★\"][this.get(\"stars\")];\r\n      }\r\n      return this._stars;\r\n    },\r\n    \r\n    fid:function(){\r\n      if(this._fid === undefined){\r\n        this._fid = this.get(\"uid\")+\"_\"+this.get(\"stars\");\r\n      }\r\n      return this._fid;\r\n    },\r\n    \r\n    portrait:function(){\r\n      if(this._portrait === undefined){\r\n        this._portrait = 'images/champions/portrait_'+this.get('uid')+'.png';\r\n      }\r\n      return this._portrait;\r\n    },\r\n    \r\n    image:function(){\r\n      if(this._image === undefined){\r\n        this._image = 'images/champions/fullsize_'+this.get('uid')+'.png';\r\n      }\r\n      return this._image;\r\n    },\r\n    \r\n    type:function(){\r\n      if(this._type === undefined){\r\n        this._type = CoC.data.types.findWhere({ uid:this.get(\"typeId\") });\r\n      }\r\n      return this._type;\r\n    },\r\n    \r\n    crystals:function(){\r\n      if(this._crystals === undefined){\r\n        this._crystals = [];\r\n        var ccs = CoC.data.crystalChampions.find({ championId:this.get(\"uid\"), championStars:this.get(\"stars\") });\r\n        for(var i=0; i<ccs.length; i++)\r\n          this._crystals.push(ccs.crystal());\r\n      }\r\n      return this._crystals;\r\n    },\r\n    \r\n    //clean an import's variable types\r\n    update:function(){\r\n      var other = CoC.data.champions.findWhere({ uid:this.get(\"uid\"), stars:this.get(\"stars\") });\r\n      if(!other)\r\n        return false;\r\n      this.set(\"typeId\", other.get(\"typeId\"));\r\n      this.set(\"stars\", parseInt(this.get(\"stars\"), 10) || 1);\r\n      this.set(\"rank\", parseInt(this.get(\"rank\"), 10) || 1);\r\n      this.set(\"level\", parseInt(this.get(\"level\"), 10) || 1);\r\n      this.set(\"awakened\", parseInt(this.get(\"awakened\"), 10) || 0);\r\n      return true;\r\n    }\r\n  });\r\n  \r\n})();\r\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\nCoC.model.Effect = Backbone.Model.extend({\r\n\tdefaults: {\r\n    name: \"Effect\",\r\n    uid: \"effect\",\r\n\t\tbase: 10,\r\n    amount:0,\r\n    image:\"\",\r\n    altimage:\"\"\r\n  },\r\n\r\n  constructor: function() {\r\n    Backbone.Model.apply(this, arguments);\r\n    var uid = this.get('uid');\r\n    var name = CoC.lang.model('effect-'+uid+'-name');\r\n    var description = CoC.lang.model('effect-'+uid+'-description');\r\n    if(name)\r\n      this.set('name', name);\r\n    if(description)\r\n      this.set('description', description);\r\n  },\r\n\r\n  image:function(){\r\n    return this.get(\"image\") + \".jpg\";\r\n  },\r\n\r\n  imageOff:function(){\r\n    return this.get(\"image\") + \"_off.jpg\";\r\n  },\r\n\r\n  championIds:function(ids){\r\n    if(ids){\r\n      this._championIds = [];\r\n      for(var id in ids)\r\n        this._championIds.push(id);\r\n    }\r\n    return this._championIds;\r\n  }\r\n\r\n});\r\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\nCoC.model.Synergy = Backbone.Model.extend({\r\n\tdefaults: {\r\n    fromId: \"champion\",\r\n    fromStars: 1,\r\n\t\ttoId: 'champion',\r\n\t\teffectId: \"effect\",\r\n    effectAmount: 20\r\n  },\r\n  \r\n  to:function(){\r\n    if(this._to === undefined){\r\n      this._to = CoC.data.champions.findWhere({ uid:this.get(\"toId\") });\r\n    }\r\n    return this._to;\r\n  },\r\n  \r\n  from:function(){\r\n    if(this._from === undefined){\r\n      this._from = CoC.data.champions.findWhere({ uid:this.get(\"fromId\"), stars:this.get(\"fromStars\") });\r\n    }\r\n    return this._from;\r\n  },\r\n  \r\n  effect: function(){\r\n    if(this._effect === undefined){\r\n      this._effect = CoC.data.effects.findWhere({ uid:this.get(\"effectId\") });\r\n    }\r\n    return this._effect;\r\n  }\r\n});\r\n","var CoC = CoC || {};\r\nCoC.model = CoC.model || {};\r\nCoC.model.Type = Backbone.Model.extend({\r\n\tdefaults: {\r\n    name: \"Type\",\r\n    uid: \"type\",\r\n  },\r\n\r\n  constructor: function() {\r\n    Backbone.Model.apply(this, arguments);\r\n    var uid = this.get('uid');\r\n    var name = CoC.lang.model('type-'+uid+'-name');\r\n    if(name)\r\n      this.set('name', name);\r\n  },\r\n\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Champions\r\nCoC.data.champions = new Backbone.Collection([\r\n\r\n  { uid:\"blackbolt\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"blackbolt\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"blackbolt\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"captainmarvel\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"captainmarvel\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"drax\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"drax\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"drax\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 1 },\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"gamora\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"msmarvel\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"msmarvel\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"ronan\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"ronan\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"ronan\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"spidermanblack\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"spidermanblack\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"superiorironman\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"superiorironman\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"superiorironman\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"thor\", typeId:\"cosmic\", stars: 2 },\r\n  { uid:\"thor\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"thor\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"thorjanefoster\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"thorjanefoster\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"venom\", typeId:\"cosmic\", stars: 3 },\r\n  { uid:\"venom\", typeId:\"cosmic\", stars: 4 },\r\n\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 1 },\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"ironman\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"ironpatriot\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"ironpatriot\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"hulkbuster\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"hulkbuster\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"hulkbuster\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"kang\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"rocket\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"rocket\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"starlord\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"starlord\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"starlord\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"vision\", typeId:\"tech\", stars: 1 },\r\n  { uid:\"vision\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"vision\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"vision\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"thevision\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"thevision\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"thevision\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"ultron\", typeId:\"tech\", stars: 2 },\r\n  { uid:\"ultron\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"ultron\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"warmachine\", typeId:\"tech\", stars: 3 },\r\n  { uid:\"warmachine\", typeId:\"tech\", stars: 4 },\r\n\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 1 },\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"colossus\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"cyclops\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"cyclops\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"cyclops\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"deadpool\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"deadpool\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"deadpool\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"deadpoolxforce\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"deadpoolxforce\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"magneto\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"magneto\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"magnetomarvelnow\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"magnetomarvelnow\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"storm\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"storm\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"storm\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 1 },\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 2 },\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 3 },\r\n  { uid:\"wolverine\", typeId:\"mutant\", stars: 4 },\r\n\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 1 },\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"blackpanther\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"blackwidow\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"blackwidow\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"blackwidow\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"daredevil\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"daredevil\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"daredevilnetflix\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"daredevilnetflix\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"elektra\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"elektra\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 1 },\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"hawkeye\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"moonknight\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"moonknight\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"punisher\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"punisher\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"punisher\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"wintersoldier\", typeId:\"skill\", stars: 2 },\r\n  { uid:\"wintersoldier\", typeId:\"skill\", stars: 3 },\r\n  { uid:\"wintersoldier\", typeId:\"skill\", stars: 4 },\r\n\r\n  { uid:\"abomination\", typeId:\"science\", stars: 2 },\r\n  { uid:\"abomination\", typeId:\"science\", stars: 3 },\r\n  { uid:\"abomination\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"antman\", typeId:\"science\", stars: 2 },\r\n  { uid:\"antman\", typeId:\"science\", stars: 3 },\r\n  { uid:\"antman\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"captainamerica\", typeId:\"science\", stars: 2 },\r\n  { uid:\"captainamerica\", typeId:\"science\", stars: 3 },\r\n  { uid:\"captainamerica\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"captainamericawwii\", typeId:\"science\", stars: 3 },\r\n  { uid:\"captainamericawwii\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"electro\", typeId:\"science\", stars: 3 },\r\n  { uid:\"electro\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"hulk\", typeId:\"science\", stars: 1 },\r\n  { uid:\"hulk\", typeId:\"science\", stars: 2 },\r\n  { uid:\"hulk\", typeId:\"science\", stars: 3 },\r\n  { uid:\"hulk\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"joefixit\", typeId:\"science\", stars: 3 },\r\n  { uid:\"joefixit\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"rhino\", typeId:\"science\", stars: 2 },\r\n  { uid:\"rhino\", typeId:\"science\", stars: 3 },\r\n  { uid:\"rhino\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"spidergwen\", typeId:\"science\", stars: 3 },\r\n  { uid:\"spidergwen\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 1 },\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 2 },\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 3 },\r\n  { uid:\"spiderman\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"spidermanmorales\", typeId:\"science\", stars: 3 },\r\n  { uid:\"spidermanmorales\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"yellowjacket\", typeId:\"science\", stars: 2 },\r\n  { uid:\"yellowjacket\", typeId:\"science\", stars: 3 },\r\n  { uid:\"yellowjacket\", typeId:\"science\", stars: 4 },\r\n\r\n  { uid:\"drstrange\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"drstrange\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"ironfist\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"ironfist\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"ironfist\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 1 },\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"juggernaut\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"magik\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"magik\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"magik\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 1 },\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"scarletwitch\", typeId:\"mystic\", stars: 4 },\r\n\r\n  { uid:\"unstoppablecolossus\", typeId:\"mystic\", stars: 2 },\r\n  { uid:\"unstoppablecolossus\", typeId:\"mystic\", stars: 3 },\r\n  { uid:\"unstoppablecolossus\", typeId:\"mystic\", stars: 4 }\r\n  \r\n], {\r\n  model: CoC.model.Champion\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Effects\r\nCoC.data.effects = new Backbone.Collection([\r\n\r\n  { uid: \"attack\", image:\"images/effects/attack\", base:5 },\r\n  { uid: \"stun\", image:\"images/effects/stun\", base:15 },\r\n  { uid: \"critrate\", image:\"images/effects/critical\", base:5 },\r\n  { uid: \"critdamage\", image:\"images/effects/critical\", base:15 },\r\n  { uid: \"powergain\", image:\"images/effects/mana\", base:3 },\r\n  { uid: \"powersteal\", image:\"images/effects/mana_steal\", base:3 },\r\n  { uid: \"perfectblock\", image:\"images/effects/block\", base:3 },\r\n  { uid: \"block\", image:\"images/effects/block\", base:10 },\r\n  { uid: \"armor\", image:\"images/effects/armor\", base:4 },\r\n  { uid: \"health\", image:\"images/effects/health\", base:4 },\r\n  { uid: \"healthsteal\", image:\"images/effects/health_steal\", base:4 }\r\n\r\n], {\r\n  model: CoC.model.Effect\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Synergies\r\nCoC.data.synergies = new Backbone.Collection([\r\n\r\n  { fromId:\"blackbolt\", fromStars: 2, toId: \"cyclops\", effectId:\"block\", effectAmount:10 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"cyclops\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"ronan\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"blackbolt\", fromStars: 3, toId: \"hulk\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"cyclops\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"ronan\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"blackbolt\", fromStars: 4, toId: \"hulk\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"captainmarvel\", fromStars: 3, toId: \"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainmarvel\", fromStars: 3, toId: \"gamora\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainmarvel\", fromStars: 3, toId: \"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"gamora\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainmarvel\", fromStars: 4, toId: \"wolverine\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"drax\", fromStars:2, toId:\"starlord\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"drax\", fromStars:2, toId:\"gamora\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"drax\", fromStars:3, toId:\"starlord\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"drax\", fromStars:3, toId:\"gamora\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"drax\", fromStars:4, toId:\"starlord\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"drax\", fromStars:4, toId:\"gamora\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"gamora\", fromStars:2, toId:\"starlord\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"gamora\", fromStars:3, toId:\"starlord\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"gamora\", fromStars:3, toId:\"drax\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"gamora\", fromStars:4, toId:\"starlord\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"gamora\", fromStars:4, toId:\"drax\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"msmarvel\", fromStars:3, toId:\"hulk\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"thor\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"msmarvel\", fromStars:4, toId:\"hulk\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"ronan\", fromStars:2, toId:\"blackbolt\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"ronan\", fromStars:3, toId:\"blackbolt\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"ronan\", fromStars:3, toId:\"ironman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"ronan\", fromStars:3, toId:\"gamora\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"ronan\", fromStars:4, toId:\"blackbolt\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"ronan\", fromStars:4, toId:\"ironman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"ronan\", fromStars:4, toId:\"gamora\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"spidermanblack\", fromStars:3, toId:\"storm\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"spidermanblack\", fromStars:3, toId:\"electro\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"spidermanblack\", fromStars:4, toId:\"storm\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"spidermanblack\", fromStars:4, toId:\"electro\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"superiorironman\", fromStars:2, toId:\"captainamerica\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"superiorironman\", fromStars:2, toId:\"daredevil\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"superiorironman\", fromStars:2, toId:\"thor\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"superiorironman\", fromStars:3, toId:\"captainamerica\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"superiorironman\", fromStars:3, toId:\"daredevil\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"superiorironman\", fromStars:3, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"superiorironman\", fromStars:4, toId:\"captainamerica\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"superiorironman\", fromStars:4, toId:\"daredevil\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"superiorironman\", fromStars:4, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n\r\n  { fromId:\"thor\", fromStars:2, toId:\"drstrange\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"thor\", fromStars:2, toId:\"ironman\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"thor\", fromStars:3, toId:\"drstrange\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"thor\", fromStars:3, toId:\"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"thor\", fromStars:3, toId:\"juggernaut\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"thor\", fromStars:4, toId:\"drstrange\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"thor\", fromStars:4, toId:\"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"thor\", fromStars:4, toId:\"juggernaut\", effectId:\"armor\", effectAmount:7 },\r\n\r\n  { fromId:\"ironman\", fromStars:2, toId:\"thor\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"ironman\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironman\", fromStars:3, toId:\"thor\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"ironman\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironman\", fromStars:4, toId:\"thor\", effectId:\"perfectblock\", effectAmount:5 },\r\n  \r\n  { fromId:\"ironpatriot\", fromStars:3, toId:\"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironpatriot\", fromStars:3, toId:\"spiderman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"ironpatriot\", fromStars:3, toId:\"captainamerica\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"ironpatriot\", fromStars:4, toId:\"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironpatriot\", fromStars:4, toId:\"spiderman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"ironpatriot\", fromStars:4, toId:\"captainamerica\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"kang\", fromStars:4, toId:\"blackbolt\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"kang\", fromStars:4, toId:\"thevision\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"kang\", fromStars:4, toId:\"thor\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"kang\", fromStars:4, toId:\"spidermanblack\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"hulkbuster\", fromStars:2, toId:\"hulk\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"hulkbuster\", fromStars:3, toId:\"hulk\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"hulkbuster\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"hulkbuster\", fromStars:3, toId:\"superiorironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"hulkbuster\", fromStars:4, toId:\"hulk\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"hulkbuster\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:6 },\r\n  { fromId:\"hulkbuster\", fromStars:4, toId:\"superiorironman\", effectId:\"perfectblock\", effectAmount:6 },\r\n\r\n  { fromId:\"rocket\", fromStars:3, toId:\"starlord\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"rocket\", fromStars:3, toId:\"ronan\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"rocket\", fromStars:3, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"rocket\", fromStars:3, toId:\"drax\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"starlord\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"ronan\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"rocket\", fromStars:4, toId:\"drax\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"starlord\", fromStars:2, toId:\"rocket\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"starlord\", fromStars:2, toId:\"drax\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"starlord\", fromStars:3, toId:\"rocket\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"starlord\", fromStars:3, toId:\"drax\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"starlord\", fromStars:3, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"starlord\", fromStars:4, toId:\"rocket\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"starlord\", fromStars:4, toId:\"drax\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"starlord\", fromStars:4, toId:\"gamora\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"vision\", fromStars:2, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"vision\", fromStars:2, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"vision\", fromStars:3, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"vision\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"vision\", fromStars:4, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"vision\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"thevision\", fromStars:2, toId:\"ironman\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"thevision\", fromStars:2, toId:\"scarletwitch\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"thevision\", fromStars:3, toId:\"ironman\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"thevision\", fromStars:3, toId:\"scarletwitch\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"thevision\", fromStars:3, toId:\"ultron\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"thevision\", fromStars:4, toId:\"ironman\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"thevision\", fromStars:4, toId:\"scarletwitch\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"thevision\", fromStars:4, toId:\"ultron\", effectId:\"attack\", effectAmount:5 },\r\n\r\n  { fromId:\"ultron\", fromStars:2, toId:\"ironman\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"ultron\", fromStars:2, toId:\"scarletwitch\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"ultron\", fromStars:3, toId:\"ironman\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"ultron\", fromStars:3, toId:\"scarletwitch\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ultron\", fromStars:4, toId:\"ironman\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"ultron\", fromStars:4, toId:\"scarletwitch\", effectId:\"armor\", effectAmount:6 },\r\n  \r\n  { fromId:\"warmachine\", fromStars:3, toId:\"hulkbuster\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"warmachine\", fromStars:3, toId:\"hawkeye\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"warmachine\", fromStars:3, toId:\"blackwidow\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"hulkbuster\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"blackpanther\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"hawkeye\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"warmachine\", fromStars:4, toId:\"blackwidow\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"colossus\", fromStars:2, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"colossus\", fromStars:3, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"colossus\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"colossus\", fromStars:3, toId:\"magik\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"colossus\", fromStars:4, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"colossus\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"colossus\", fromStars:4, toId:\"magik\", effectId:\"health\", effectAmount:5 },\r\n\r\n  { fromId:\"cyclops\", fromStars:2, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"cyclops\", fromStars:3, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"cyclops\", fromStars:3, toId:\"magneto\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"cyclops\", fromStars:4, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"cyclops\", fromStars:4, toId:\"magneto\", effectId:\"attack\", effectAmount:5 },\r\n\r\n  { fromId:\"deadpool\", fromStars:2, toId:\"punisher\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"deadpool\", fromStars:3, toId:\"rhino\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"deadpool\", fromStars:3, toId:\"wolverine\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"deadpool\", fromStars:3, toId:\"punisher\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"deadpool\", fromStars:4, toId:\"rhino\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"deadpool\", fromStars:4, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"deadpool\", fromStars:4, toId:\"punisher\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"deadpoolxforce\", fromStars:3, toId:\"moonknight\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"deadpoolxforce\", fromStars:3, toId:\"deadpool\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"deadpoolxforce\", fromStars:4, toId:\"magnetomarvelnow\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"deadpoolxforce\", fromStars:4, toId:\"moonknight\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"deadpoolxforce\", fromStars:4, toId:\"deadpool\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"magneto\", fromStars:3, toId:\"wolverine\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"magneto\", fromStars:3, toId:\"cyclops\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"magneto\", fromStars:3, toId:\"storm\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"magneto\", fromStars:4, toId:\"wolverine\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"magneto\", fromStars:4, toId:\"cyclops\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"magneto\", fromStars:4, toId:\"storm\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"magnetomarvelnow\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:3, toId:\"magik\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:3, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:4, toId:\"magik\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"magnetomarvelnow\", fromStars:4, toId:\"wolverine\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"storm\", fromStars:2, toId:\"blackpanther\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"storm\", fromStars:3, toId:\"magik\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"storm\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"storm\", fromStars:3, toId:\"blackpanther\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"magik\", effectId:\"armor\", effectAmount:7 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"blackpanther\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"storm\", fromStars:4, toId:\"magneto\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"wolverine\", fromStars:2, toId:\"cyclops\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"wolverine\", fromStars:3, toId:\"cyclops\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"wolverine\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"wolverine\", fromStars:3, toId:\"magneto\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"wolverine\", fromStars:4, toId:\"cyclops\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"wolverine\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"wolverine\", fromStars:4, toId:\"magneto\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"blackpanther\", fromStars:2, toId:\"ironfist\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"blackpanther\", fromStars:3, toId:\"ironfist\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"blackpanther\", fromStars:3, toId:\"storm\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"blackpanther\", fromStars:3, toId:\"deadpool\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"blackpanther\", fromStars:4, toId:\"ironfist\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"blackpanther\", fromStars:4, toId:\"storm\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"blackpanther\", fromStars:4, toId:\"deadpool\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"daredevil\", fromStars:3, toId:\"superiorironman\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"daredevil\", fromStars:3, toId:\"blackwidow\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"daredevil\", fromStars:3, toId:\"elektra\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"daredevil\", fromStars:4, toId:\"superiorironman\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"daredevil\", fromStars:4, toId:\"blackwidow\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"daredevil\", fromStars:4, toId:\"elektra\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"elektra\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"elektra\", fromStars:3, toId:\"daredevil\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"elektra\", fromStars:3, toId:\"blackwidow\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"daredevil\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"deadpool\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"elektra\", fromStars:4, toId:\"blackwidow\", effectId:\"critdamage\", effectAmount:25 },\r\n\r\n  { fromId:\"hawkeye\", fromStars:2, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"hawkeye\", fromStars:3, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"hawkeye\", fromStars:3, toId:\"ironman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"hawkeye\", fromStars:4, toId:\"scarletwitch\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"hawkeye\", fromStars:4, toId:\"ironman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"hawkeye\", fromStars:4, toId:\"hulk\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"moonknight\", fromStars:3, toId:\"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"moonknight\", fromStars:3, toId:\"daredevil\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"moonknight\", fromStars:3, toId:\"deadpoolxforce\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"daredevil\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"deadpoolxforce\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"moonknight\", fromStars:4, toId:\"ironpatriot\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"punisher\", fromStars:2, toId:\"spiderman\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"punisher\", fromStars:3, toId:\"spiderman\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"punisher\", fromStars:3, toId:\"rhino\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"punisher\", fromStars:4, toId:\"spiderman\", effectId:\"critdamage\", effectAmount:25 },\r\n  { fromId:\"punisher\", fromStars:4, toId:\"rhino\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"wintersoldier\", fromStars:2, toId:\"wolverine\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"wintersoldier\", fromStars:2, toId:\"captainamerica\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"wintersoldier\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"wintersoldier\", fromStars:3, toId:\"captainamerica\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"wintersoldier\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"wintersoldier\", fromStars:4, toId:\"captainamerica\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"blackwidow\", fromStars:2, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"blackwidow\", fromStars:2, toId:\"wintersoldier\", effectId:\"powergain\", effectAmount:3 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"hulk\", effectId:\"stun\", effectAmount:20 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"wintersoldier\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"blackwidow\", fromStars:3, toId:\"hawkeye\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"hulk\", effectId:\"stun\", effectAmount:25 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"wintersoldier\", effectId:\"powergain\", effectAmount:5 },\r\n  { fromId:\"blackwidow\", fromStars:4, toId:\"hawkeye\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"abomination\", fromStars:2, toId:\"rhino\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"abomination\", fromStars:3, toId:\"rhino\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"abomination\", fromStars:3, toId:\"hulk\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"abomination\", fromStars:4, toId:\"rhino\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"abomination\", fromStars:4, toId:\"hulk\", effectId:\"attack\", effectAmount:5 },\r\n\r\n  { fromId:\"antman\", fromStars:2, toId:\"yellowjacket\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"antman\", fromStars:2, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:3 },\r\n  { fromId:\"antman\", fromStars:3, toId:\"yellowjacket\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"antman\", fromStars:3, toId:\"spiderman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"antman\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"hulk\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"yellowjacket\", effectId:\"attack\", effectAmount:6 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"spiderman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"antman\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"captainamerica\", fromStars:2, toId:\"spiderman\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"captainamerica\", fromStars:2, toId:\"superiorironman\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"captainamerica\", fromStars:2, toId:\"ironman\", effectId:\"armor\", effectAmount:3 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"superiorironman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"captainamerica\", fromStars:3, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"superiorironman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"captainamerica\", fromStars:4, toId:\"ironman\", effectId:\"perfectblock\", effectAmount:5 },\r\n  \r\n  { fromId:\"captainamericawwii\", fromStars:3, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamericawwii\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"captainamericawwii\", fromStars:4, toId:\"wintersoldier\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"captainamericawwii\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  \r\n  { fromId:\"electro\", fromStars:3, toId:\"spiderman\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"electro\", fromStars:3, toId:\"rhino\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"electro\", fromStars:4, toId:\"spiderman\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"electro\", fromStars:4, toId:\"rhino\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"hulk\", fromStars:2, toId:\"thor\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"hulk\", fromStars:3, toId:\"thor\", effectId:\"critdamage\", effectAmount:5 },\r\n  { fromId:\"hulk\", fromStars:3, toId:\"abomination\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"hulk\", fromStars:3, toId:\"hawkeye\", effectId:\"armor\", effectAmount:20 },\r\n  { fromId:\"hulk\", fromStars:4, toId:\"thor\", effectId:\"critdamage\", effectAmount:6 },\r\n  { fromId:\"hulk\", fromStars:4, toId:\"abomination\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"hulk\", fromStars:4, toId:\"hawkeye\", effectId:\"armor\", effectAmount:25 },\r\n\r\n  { fromId:\"rhino\", fromStars:2, toId:\"spiderman\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"rhino\", fromStars:2, toId:\"abomination\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"rhino\", fromStars:3, toId:\"spiderman\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"rhino\", fromStars:3, toId:\"abomination\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"rhino\", fromStars:3, toId:\"electro\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"rhino\", fromStars:4, toId:\"spiderman\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"rhino\", fromStars:4, toId:\"abomination\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"rhino\", fromStars:4, toId:\"electro\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"spiderman\", fromStars:1, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:1, toId:\"hawkeye\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:2, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:2, toId:\"hawkeye\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"wolverine\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"hawkeye\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"electro\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"spiderman\", fromStars:3, toId:\"captainamerica\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"wolverine\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"hawkeye\", effectId:\"attack\", effectAmount:6 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"electro\", effectId:\"health\", effectAmount:7 },\r\n  { fromId:\"spiderman\", fromStars:4, toId:\"captainamerica\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"yellowjacket\", fromStars:2, toId:\"antman\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"yellowjacket\", fromStars:2, toId:\"ultron\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"yellowjacket\", fromStars:3, toId:\"antman\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"yellowjacket\", fromStars:3, toId:\"ultron\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"yellowjacket\", fromStars:4, toId:\"antman\", effectId:\"attack\", effectAmount:6 },\r\n  { fromId:\"yellowjacket\", fromStars:4, toId:\"ultron\", effectId:\"critdamage\", effectAmount:25 },\r\n  \r\n  { fromId:\"drstrange\", fromStars:3, toId:\"thor\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"drstrange\", fromStars:3, toId:\"spiderman\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"drstrange\", fromStars:3, toId:\"scarletwitch\", effectId:\"block\", effectAmount:15 },\r\n  { fromId:\"drstrange\", fromStars:3, toId:\"blackbolt\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"thor\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"spiderman\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"scarletwitch\", effectId:\"block\", effectAmount:20 },\r\n  { fromId:\"drstrange\", fromStars:4, toId:\"blackbolt\", effectId:\"perfectblock\", effectAmount:5 },\r\n\r\n  { fromId:\"ironfist\", fromStars:2, toId:\"blackpanther\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"ironfist\", fromStars:3, toId:\"blackpanther\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironfist\", fromStars:3, toId:\"drstrange\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"ironfist\", fromStars:4, toId:\"blackpanther\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironfist\", fromStars:4, toId:\"drstrange\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"ironfist\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n\r\n  { fromId:\"juggernaut\", fromStars:2, toId:\"colossus\", effectId:\"critrate\", effectAmount:5 },\r\n  { fromId:\"juggernaut\", fromStars:3, toId:\"drstrange\", effectId:\"attack\", effectAmount:4 },\r\n  { fromId:\"juggernaut\", fromStars:3, toId:\"colossus\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"juggernaut\", fromStars:3, toId:\"hulk\", effectId:\"critrate\", effectAmount:6 },\r\n  { fromId:\"juggernaut\", fromStars:4, toId:\"drstrange\", effectId:\"attack\", effectAmount:5 },\r\n  { fromId:\"juggernaut\", fromStars:4, toId:\"colossus\", effectId:\"critrate\", effectAmount:7 },\r\n  { fromId:\"juggernaut\", fromStars:4, toId:\"hulk\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"magik\", fromStars:2, toId:\"colossus\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"magik\", fromStars:3, toId:\"storm\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"magik\", fromStars:3, toId:\"colossus\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"magik\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"storm\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"colossus\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"magik\", fromStars:4, toId:\"juggernaut\", effectId:\"critrate\", effectAmount:7 },\r\n\r\n  { fromId:\"scarletwitch\", fromStars:2, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:4 },\r\n  { fromId:\"scarletwitch\", fromStars:3, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"scarletwitch\", fromStars:3, toId:\"vision\", effectId:\"powergain\", effectAmount:4 },\r\n  { fromId:\"scarletwitch\", fromStars:4, toId:\"captainmarvel\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"scarletwitch\", fromStars:4, toId:\"vision\", effectId:\"powergain\", effectAmount:5 },\r\n\r\n  { fromId:\"unstoppablecolossus\", fromStars:2, toId:\"magik\", effectId:\"health\", effectAmount:4 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:2, toId:\"juggernaut\", effectId:\"critdamage\", effectAmount:15 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"wolverine\", effectId:\"armor\", effectAmount:5 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"magik\", effectId:\"health\", effectAmount:5 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:4 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:3, toId:\"juggernaut\", effectId:\"critdamage\", effectAmount:20 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"wolverine\", effectId:\"armor\", effectAmount:6 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"magik\", effectId:\"health\", effectAmount:6 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"cyclops\", effectId:\"perfectblock\", effectAmount:5 },\r\n  { fromId:\"unstoppablecolossus\", fromStars:4, toId:\"juggernaut\", effectId:\"critdamage\", effectAmount:25 }\r\n  \r\n], {\r\n  model: CoC.model.Synergy\r\n});\r\n","var CoC = CoC || {};\r\nCoC.data = CoC.data || {};\r\n\r\n//Champion Types\r\nCoC.data.types = new Backbone.Collection([\r\n\r\n  { uid:\"cosmic\", image:\"images/icons/cosmic.png\" },\r\n  { uid:\"tech\", image:\"images/icons/tech.png\" },\r\n  { uid:\"mutant\", image:\"images/icons/mutant.png\" },\r\n  { uid:\"skill\", image:\"images/icons/skill.png\" },\r\n  { uid:\"science\", image:\"images/icons/science.png\" },\r\n  { uid:\"mystic\", image:\"images/icons/mystic.png\" }\r\n  \r\n], {\r\n  model: CoC.model.Type\r\n});\r\n","var CoC = CoC || {};\r\nCoC.algorithm = CoC.algorithm || {};\r\n\r\n(function(){\r\n  \"use strict\";\r\n\r\n  CoC.algorithm[\"greedy\"]=new function(){\r\n    this.uid = 'greedy';\r\n    this.quest = true;\r\n    this.extras = false;\r\n\r\n    this.build=function(options){\r\n      var i, j, o, t, team, index;\r\n      var size = parseInt(options.size, 10), teams = {}, list = [], preselect = [], typeWeights = [], progress = null;\r\n      preProcess(options.champions, list, typeWeights, options.levels);\r\n      \r\n      if(options.quest)\r\n        for(i=list.length-1;i>=0;i--)\r\n          if(list[i].quest){\r\n            preselect.push(list[i]);\r\n            list.splice(i,1);\r\n          }\r\n          \r\n      if(options.progress)\r\n        progress={\r\n          current:0,\r\n          max:(function(r){\r\n            var value = 0;\r\n            for(var n = list.length; n > r; n-=r){\r\n              value += combination(n, r);\r\n              if(options.quest)\r\n                break;\r\n            }\r\n            return value;\r\n          })(preselect.length? size - preselect.length: size),\r\n          callback:options.progress\r\n        };\r\n\r\n      if(preselect.length > 0){      \r\n        if(preselect.length > size){\r\n          team = getTopPartner(preselect, 0, size, typeWeights, progress);\r\n        }\r\n        else{\r\n          var synergies = [], types = getTypes(preselect);\r\n          team = getNextPartner(list, preselect, synergies, types, 0, size, typeWeights, progress);\r\n        }\r\n        if(team && team.value > 0)\r\n          teams[0]=team;\r\n      }\r\n      else{\r\n        \r\n        var team_index = 0;\r\n        do {\r\n          team = getTopPartner(list, 0, size, typeWeights, progress);\r\n          if(team){          \r\n            if (team.value){\r\n              if(!options.quest)\r\n                team = getSynergyCulledTeam(team, typeWeights);\r\n              \r\n              teams[team_index]=team;\r\n              teams.length=++team_index;\r\n              for(o in team.champions)\r\n                list.splice(list.indexOf(team.champions[o]),1);\r\n                \r\n              if(options.quest)\r\n                break;\r\n            }\r\n            else break;\r\n          }\r\n        } while(team !== null);\r\n        \r\n        //check if we have enough\r\n        var needed = 0;\r\n        for(i in teams)\r\n          if(i !== 'length')\r\n            needed += size - teams[i].champions.length;\r\n          \r\n        //break up teams if we dont have enough\r\n        while(list.length < needed){\r\n          i = teams.length - 1;\r\n          for(t in teams[i].champions){\r\n            list.push(teams[i].champions[t]);\r\n            needed--;\r\n          }\r\n          delete teams[i];\r\n          teams.length--;\r\n        }\r\n        \r\n        var appendToTeam = function appendToTeam(list, object){\r\n          var l = list.slice();\r\n          l.push(object);\r\n          return l;\r\n        };\r\n        \r\n        //add into existing teams, using the comparison to find best partner\r\n        for(i=teams.length-1; i>=0; i--){\r\n          if(teams[i].champions.length < size){\r\n            team = getNextPartner(list, teams[i].champions, teams[i].synergies, getTypes(teams[i].champions), 0, size, typeWeights, progress);\r\n            if(team){\r\n              for(o in team.champions){\r\n                index = list.indexOf(team.champions[o]);\r\n                if(index != -1)\r\n                  list.splice(index,1);\r\n              }\r\n              teams[i] = team;\r\n            }\r\n            else{\r\n              for(o in teams[i].champions)\r\n                list.push(teams[i].champions[o]);\r\n              delete teams[i];\r\n            }\r\n          }\r\n        }\r\n        \r\n        delete teams.length;\r\n      }\r\n        \r\n      return postProcess(teams, (options.extras && options.quest !== true)? list: undefined);\r\n    };\r\n    \r\n    function preProcess(champions, list, typeWeights, useLevels){\r\n      var i, champion, synergies;\r\n\r\n      for(i=2; i<=5; i++)\r\n        typeWeights[i] = CoC.settings.getDuplicateWeight(i);\r\n        \r\n      for(i=0; i<champions.length; i++){\r\n        champion = champions[i];\r\n        \r\n        synergies = {};\r\n        _(CoC.data.synergies.where({ fromId:champion.get(\"uid\"), fromStars:champion.get(\"stars\") })).each(function(synergy){\r\n          var effect = synergy.effect();\r\n          synergies[synergy.get(\"toId\")]={\r\n            id:synergy.get(\"toId\"),\r\n            fromId:synergy.get(\"fromId\"),\r\n            fromStars:synergy.get(\"fromStars\"),\r\n            value:CoC.settings.getWeight(synergy.get(\"effectId\")) * synergy.get(\"effectAmount\") / effect.get(\"base\")\r\n          };\r\n        });\r\n        \r\n        list.push({\r\n          id:champion.get(\"uid\"),\r\n          stars:champion.get(\"stars\"),\r\n          quest:champion.get(\"quest\"),\r\n          data:champion,\r\n          type:CoC.data.types.indexOf(champion.type()),\r\n          synergies:synergies,\r\n          value:calculateChampionValue(champion, useLevels)\r\n        });\r\n      }  \r\n    }\r\n    \r\n    function postProcess(teams, extras){\r\n      var i, o, \r\n        result = {\r\n          teams:[],\r\n          extras:[]\r\n        };\r\n      for(i in teams){\r\n        var team = [];    \r\n        for(o in teams[i].champions)\r\n          team.push(teams[i].champions[o].data);\r\n        result.teams.push(team);\r\n      }\r\n      if(extras !== undefined){\r\n        for(o in extras)\r\n          result.extras.push(extras[o].data);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    function getTopPartner(list, index, depth, typeWeights, progress){\r\n      if(index >= list.length)\r\n        return null;\r\n      var current = getNextPartner(list, addPartnerHero([], list[index]), [], getTypes([ list[index] ]), index+1, depth, typeWeights, progress);\r\n      if(current === null)\r\n        return null;\r\n      var next = getTopPartner(list,index+1,depth, typeWeights, progress);\r\n      return (compareTeams(current,next) >= 0)? current: next;\r\n    }\r\n    \r\n    function getNextPartner(list, champions, synergies, types, index, depth, typeWeights, progress){\r\n      if(champions.length == depth){\r\n        if(progress)\r\n          progress.callback(++progress.current, progress.max);\r\n        return {\r\n          champions:champions,\r\n          synergies:synergies,\r\n          value:getTeamValue(champions, synergies, types, typeWeights)\r\n        };\r\n      }\r\n      if(index == list.length)\r\n        return null;\r\n      var current = getNextPartner(list, \r\n        addPartnerHero(champions, list[index]), \r\n        addPartnerSynergies(synergies, champions, list[index]), \r\n        addPartnerType(types, list[index]), \r\n        index+1, depth, typeWeights, progress\r\n      );\r\n      var next = getNextPartner(list, champions, synergies, types, index+1, depth, typeWeights, progress);\r\n\r\n      return (compareTeams(current,next) >= 0)? current: next;\r\n    }\r\n    \r\n    function addPartnerHero(list, hero){\r\n      var champions = list.slice();\r\n      champions.push(hero);\r\n      return champions;\r\n    }\r\n    \r\n    function addPartnerType(list, hero){\r\n      var types = list.slice();\r\n      types[hero.type]++;\r\n      return types;\r\n    }\r\n\r\n    function getTypes(champions){\r\n      var types=[0,0,0,0,0,0], i;\r\n      if(champions !== undefined)\r\n        for(i=0; i<champions.length; i++)\r\n          types[champions[i].type]++;\r\n      return types;\r\n    }\r\n    \r\n    function addPartnerSynergies(oldSynergies, list, next){\r\n      var synergies = oldSynergies.slice(), i;    \r\n      for(i=0; i<list.length; i++){\r\n        if(list[i].synergies[next.id] !== undefined)\r\n          synergies.push(list[i].synergies[next.id]);\r\n        if(next.synergies[list[i].id] !== undefined)\r\n          synergies.push(next.synergies[list[i].id]);\r\n      }\r\n      return synergies;\r\n    }\r\n    \r\n    function getSynergies(list){\r\n      if(list.length < 2)\r\n        return [];\r\n    \r\n      var champions = [], synergies = [], remaining = champions.slice();\r\n      while(remaining.length > 0){\r\n        var hero = remaining[0];\r\n        remaining.splice(0,1);\r\n        synergies = addPartnerSynergies(synergies, champions, hero);\r\n        champions.push(hero);\r\n      }\r\n      return synergies;\r\n    }\r\n      \r\n    function getTeamValue(champions, synergies, types, typeWeights){\r\n      var vsynergies = 0, vchampions = 0, vtypes = 1, i;\r\n      for(i in synergies)\r\n        vsynergies += synergies[i].value;\r\n      for(i in champions)\r\n        vchampions += champions[i].value;\r\n      for(i in types)\r\n        if(types[i] > 1)\r\n          vtypes *= typeWeights[types[i]];\r\n      return vsynergies * vchampions * vtypes;\r\n    }\r\n    \r\n    function compareTeams(a, b){\r\n      if(b === null)\r\n        return 1;\r\n      return a.value - b.value;\r\n    }\r\n    \r\n    function getSynergyCulledTeam(team, typeWeights){\r\n      var types = [0,0,0,0,0,0], culled = {\r\n        champions:[],\r\n        synergies:team.synergies,\r\n        value:0\r\n      }, i, s, cull;\r\n      for(i=0;i<team.champions.length;i++ ){\r\n        cull = true;\r\n        synergies: for(s=0;s<team.synergies.length;s++){\r\n        \r\n          var from = team.synergies[s].fromId === team.champions[i].id && team.synergies[s].fromStars === team.champions[i].stars;\r\n          var to = team.synergies[s].id === team.champions[i].id;\r\n          if(to || from){\r\n            addPartnerType(types, team.champions[i]);\r\n            culled.champions.push(team.champions[i]);\r\n            break synergies;\r\n          }\r\n        }\r\n      }\r\n      culled.value = getTeamValue(culled.champions, culled.synergies, types, typeWeights);\r\n      return culled;\r\n    }\r\n  };\r\n\r\n  CoC.algorithm[\"shuffle\"]=new function(){\r\n    this.uid = 'shuffle';\r\n    this.quest = false;\r\n    this.extras = true;\r\n    \r\n    this.build=function(options){\r\n      var i, j;\r\n      var size = parseInt(options.size, 10), maxTeams = Math.floor(options.champions.length/size), forceExtras = maxTeams * size;\r\n      var heroMap = {}, synergyMap = {}, typeWeights = {}, teamValues = {};\r\n      preprocess(options.champions, heroMap, synergyMap, typeWeights, options.levels);\r\n    \r\n      var swaps;\r\n      \r\n      function checkValueAndSwap(array, a, b){\r\n        //get team values and counts with swaps\r\n        var v1a = getTeamValue(array, a), v1b = getTeamValue(array, b),\r\n          v2a = getTeamValue(array, a, b), v2b = getTeamValue(array, b, a), \r\n          count1 = (v1a > 0? 1: 0) + (v1b > 0? 1: 0),\r\n          count2 = (v2a > 0? 1: 0) + (v2b > 0? 1: 0);\r\n        \r\n        //dont accept less teams\r\n        if(count1 > count2)\r\n          return false;\r\n          \r\n        //more teams, or more value\r\n        if(count2 > count1 || (v2a + v2b > v1a + v1b)){\r\n          var tmp = array[a];\r\n          array[a] = array[b];\r\n          array[b] = tmp;\r\n          swaps++;\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    \r\n      function getTeamValue(array, index, swap){\r\n        if(index >= forceExtras)\r\n          return 0;\r\n      \r\n        var start = Math.floor(index/size) * size, team = array.slice(start, start + size);\r\n        if(swap !== undefined)\r\n          team[index % size] = array[swap];\r\n          \r\n        var tid = getTeamId(team), value = teamValues[tid];\r\n        if(value === undefined){\r\n          var hvalue = 0, svalue = 0, types = {};\r\n          for(var i=0; i<team.length; i++){\r\n            var hero = team[i];\r\n            //get my value\r\n            hvalue += hero.value;\r\n            //get my synergies\r\n            var synergies = synergyMap[hero.fid];\r\n            for(var j=0; j<team.length; j++){\r\n              var synergy = synergies[team[j].id];\r\n              if(synergy)\r\n                svalue += synergy.value;\r\n            }\r\n            //get my type dupes\r\n            types[hero.type] = (types[hero.type] || 0) + 1;\r\n          }\r\n          var cvalue = 1;\r\n          for(i in types)\r\n            if(types[i] > 1)\r\n              cvalue *= typeWeights[types[i]] || 1;\r\n          //combine them\r\n          teamValues[tid] = value = hvalue * svalue * cvalue;\r\n        }\r\n        return value;\r\n      }\r\n      \r\n      var progressMax = 16, didExtrasShuffle, array, arrays = [];\r\n      \r\n      function addArray(){\r\n        array = [];\r\n        for(i in heroMap)\r\n          array.push(heroMap[i]);\r\n        shuffle(array);\r\n        arrays.push(array);\r\n        didExtrasShuffle = false;\r\n      }\r\n      \r\n      addArray();\r\n      \r\n      for(var progressCounter=0; progressCounter<progressMax; progressCounter++){\r\n        if(options.progress)\r\n          options.progress(progressCounter, progressMax);\r\n          \r\n        swaps = 0;\r\n        \r\n        //do the swaps\r\n        for(i=0; i<forceExtras; i++)\r\n          for(j=(Math.floor(i/size)+1)*size; j<array.length; j++)\r\n            if(checkValueAndSwap(array, i, j))\r\n              break;\r\n    \r\n        //check if we are missing teams\r\n        var allFull = true;\r\n        for(i=0; i<forceExtras; i+=size)\r\n          if(getTeamValue(array, i) === 0)\r\n            allFull = false;\r\n    \r\n        //exit if we have nothing left to mess with\r\n        if(swaps === 0){\r\n        \r\n          //stuff at the end can be ignored, lets move to empty team\r\n          if(!didExtrasShuffle && !allFull){\r\n            var empty = -1;\r\n            for(i=0; i<forceExtras; i+=size)\r\n              if(getTeamValue(array, i) === 0)\r\n                empty = i;\r\n            if(empty !== -1){\r\n              var tmp;\r\n              for(i=0; i<size && forceExtras+i<array.length; i++){\r\n                tmp = array[empty+i];\r\n                array[empty+i] = array[forceExtras+i];\r\n                array[forceExtras+i] = tmp;\r\n              }\r\n              didExtrasShuffle = true;\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          //start new list\r\n          addArray();\r\n        }\r\n        \r\n      }\r\n      if(options.progress)\r\n        options.progress(progressMax, progressMax);\r\n        \r\n      //get the best array\r\n      var best = {};\r\n      for(i=0; i<arrays.length; i++){\r\n        var current = arrays[i], value = 0;\r\n        for(j=0; j<forceExtras; j+=size)\r\n          value += getTeamValue(current, j);\r\n        if(best.value === undefined || best.value < value){\r\n          best.value = value;\r\n          best.array = current;\r\n        }\r\n      }\r\n    \r\n      return postprocess(best.array, size, options.extras, function(array, i){ \r\n        return getTeamValue(array, i);\r\n      });\r\n    };\r\n    \r\n    function preprocess(champions, heroMap, synergyMap, typeWeights, levels){\r\n      for(i=2; i<=5; i++)\r\n        typeWeights[i] = CoC.settings.getDuplicateWeight(i);\r\n    \r\n      for(var i=0, fid, champion, synergies; i<champions.length; i++){\r\n        champion = champions[i];\r\n        fid = getHeroStarId(champion);\r\n        \r\n        //add hero\r\n        heroMap[fid]={\r\n          id:champion.get(\"uid\"),\r\n          fid:fid,\r\n          type:champion.get(\"typeId\"),\r\n          value:calculateChampionValue(champion, levels),\r\n          data:champion\r\n        };\r\n        synergyMap[fid] = {};\r\n        synergies = CoC.data.synergies.where({ fromId:champion.get(\"uid\"), fromStars:champion.get(\"stars\") });\r\n        for(var s=0;s < synergies.length; s++){\r\n          var synergy = synergies[s];          \r\n          var effect = synergy.effect();\r\n          synergyMap[fid][synergy.get(\"toId\")]={\r\n            value:CoC.settings.getWeight(synergy.get(\"effectId\")) * synergy.get(\"effectAmount\") / effect.get(\"base\")\r\n          };\r\n        }\r\n      }\r\n    }\r\n    \r\n    function postprocess(array, size, extras, getValue){\r\n      var result = { teams:[], extras:[] }, teams = [], i, j;\r\n      for(i=0; i<array.length; i+=size){\r\n        var value = getValue(array, i);\r\n        if(value > 0){\r\n          var team = [];\r\n          for(j=0; j<size; j++)\r\n            team.push(array[i+j].data);\r\n            \r\n          //sort so same teams don't shuffle around\r\n          team.sort(function(a,b){\r\n            return getHeroStarId(a).localeCompare(getHeroStarId(b));\r\n          });\r\n            \r\n          teams.push({ team:team, value:value });\r\n        }\r\n        else if(extras)\r\n          for(j=0; j<size && i+j<array.length; j++)\r\n            result.extras.push(array[i+j].data);\r\n      }\r\n      \r\n      //best teams will be first\r\n      teams.sort(function(a,b){ return b.value-a.value; });\r\n      for(i=0; i<teams.length; i++)\r\n        result.teams.push(teams[i].team);\r\n      \r\n      return result;\r\n    }\r\n\r\n    //getHeroStarId\r\n    function getHeroStarId(champion){\r\n      return [champion.get(\"uid\"), champion.get(\"stars\")].join('-');\r\n    }\r\n    \r\n    //getTeamId\r\n    function getTeamId(team){\r\n      var ids = [];\r\n      for(var i in team)\r\n        ids.push(team[i].fid);\r\n      ids.sort();\r\n      return ids.join('-');\r\n    }\r\n  };\r\n  \r\n  function calculateChampionValue(champion, levels){\r\n    if(levels === false)\r\n      return 1;\r\n    return champion.value();\r\n  }\r\n  \r\n  function factorial(n){\r\n    if(factorial.cache === undefined)\r\n      factorial.cache = { 0:1, 1:1, length:1 };\r\n    if(factorial.cache.length < n){\r\n      for(var i=factorial.cache.length; i <= n; i++)\r\n        factorial.cache[i] = i * factorial.cache[i - 1];\r\n      factorial.cache.length = n;\r\n    }\r\n    return factorial.cache[n];\r\n  }\r\n\r\n  function combination(n, r){\r\n    var value = n / factorial(r);\r\n    for(var i = n - 1; i > n - r; i--)\r\n      value *= i;\r\n    return value;\r\n  }\r\n\r\n  function shuffle(array){\r\n    var counter = array.length, temp, index;\r\n    while (counter > 0) {\r\n      index = Math.floor(Math.random() * counter);\r\n      counter--;\r\n      if(index != counter){\r\n        temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n      }\r\n    }\r\n  }\r\n  \r\n})();\r\n","onmessage = function (event){\r\n  var algorithm = event.data.algorithm,\r\n    rosterJSON = event.data.roster,\r\n    size = event.data.size,\r\n    levels = event.data.levels,\r\n    weights = event.data.weights,\r\n    quest = event.data.quest,\r\n    extras = event.data.extras,\r\n    update = event.data.update;\r\n  var i, j;\r\n  \r\n  if(!CoC.algorithm[algorithm]){\r\n    postMessage({ type:\"failed\", message:\"Algorithm not found\" });\r\n    return;\r\n  }\r\n  \r\n  //build mock settings with weights\r\n  CoC.settings = {};\r\n  CoC.settings.getWeight=function(key){\r\n    var value = weights[key];\r\n    if(value === undefined || value === null)\r\n      return 1;\r\n    return value;\r\n  };\r\n\r\n  CoC.settings.getDuplicateWeight=function(number){\r\n    if(CoC.settings.getDuplicateWeight.keys === undefined)\r\n      CoC.settings.getDuplicateWeight.keys = {\r\n        2:\"duplicates-2\",\r\n        3:\"duplicates-3\",\r\n        4:\"duplicates-4\",\r\n        5:\"duplicates-5\"\r\n      };\r\n    return CoC.settings.getWeight(CoC.settings.getDuplicateWeight.keys[number]);\r\n  };\r\n  \r\n  //Build progress function (update only every %update)\r\n  var lastTime = (new Date()).getTime(),\r\n    progress = function(current, max, description){\r\n      var time = (new Date()).getTime();\r\n      if(!description && time-lastTime < update)\r\n        return;\r\n      lastTime = time;\r\n      postMessage({ \r\n        type:\"progress\", \r\n        current:current, \r\n        max:max,\r\n        description:description        \r\n      });\r\n    };\r\n  \r\n  //Convert Champion JSON to models\r\n  var roster = [];\r\n  for(i=0; i<rosterJSON.length; i++)\r\n    roster.push(new CoC.model.Champion( rosterJSON[i] ));\r\n\r\n  //Get result from algorithm\r\n  var result = CoC.algorithm[algorithm].build({ \r\n    champions:roster, \r\n    size:size, \r\n    levels:levels,\r\n    extras:extras, \r\n    quest:quest, \r\n    progress:progress \r\n  });\r\n\r\n  //Convert Champion models to JSON\r\n  if(result.teams)\r\n    for(i=0; i<result.teams.length; i++)\r\n      for(j=0; j<result.teams[i].length; j++)\r\n        result.teams[i][j] = result.teams[i][j].toJSON();\r\n  if(result.extras)\r\n    for(i=0; i<result.extras.length; i++)\r\n      result.extras[i] = result.extras[i].toJSON();\r\n  \r\n  postMessage({ type:\"complete\", result:result });\r\n};\r\n"],"sourceRoot":"/source/"}